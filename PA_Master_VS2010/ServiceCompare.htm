<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>WinMerge File Compare Report</title>
<style type="text/css">
<!--
td,th {font-size: 12pt;}
.ln {text-align: right; background-color: lightgrey;}
.title {color: white; background-color: blue; vertical-align: top;}
.sf3b2 {color: #000000; background-color: #ffffff; }
.sf3b5 {color: #000000; background-color: #000000; }
.sf3b14 {color: #000000; background-color: #ffa0a0; }
.sf3b16 {color: #000000; background-color: #f1e2ad; }
.sf6b2 {color: #ffffff; background-color: #ffffff; }
.sf6b5 {color: #ffffff; background-color: #000000; }
.sf6b14 {color: #ffffff; background-color: #ffa0a0; }
.sf6b16 {color: #ffffff; background-color: #f1e2ad; }
.sf7b2 {color: #0000ff; background-color: #ffffff; font-weight: bold; }
.sf7b5 {color: #0000ff; background-color: #000000; font-weight: bold; }
.sf7b14 {color: #0000ff; background-color: #ffa0a0; font-weight: bold; }
.sf7b16 {color: #0000ff; background-color: #f1e2ad; font-weight: bold; }
.sf8b2 {color: #800080; background-color: #ffffff; }
.sf8b5 {color: #800080; background-color: #000000; }
.sf8b14 {color: #800080; background-color: #ffa0a0; }
.sf8b16 {color: #800080; background-color: #f1e2ad; }
.sf9b2 {color: #008000; background-color: #ffffff; }
.sf9b5 {color: #008000; background-color: #000000; }
.sf9b14 {color: #008000; background-color: #ffa0a0; }
.sf9b16 {color: #008000; background-color: #f1e2ad; }
.sf10b2 {color: #ff0000; background-color: #ffffff; }
.sf10b5 {color: #ff0000; background-color: #000000; }
.sf10b14 {color: #ff0000; background-color: #ffa0a0; }
.sf10b16 {color: #ff0000; background-color: #f1e2ad; }
.sf11b2 {color: #606060; background-color: #ffffff; }
.sf11b5 {color: #606060; background-color: #000000; }
.sf11b14 {color: #606060; background-color: #ffa0a0; }
.sf11b16 {color: #606060; background-color: #f1e2ad; }
.sf12b2 {color: #800000; background-color: #ffffff; }
.sf12b5 {color: #800000; background-color: #000000; }
.sf12b14 {color: #800000; background-color: #ffa0a0; }
.sf12b16 {color: #800000; background-color: #f1e2ad; }
.sf13b2 {color: #0080c0; background-color: #ffffff; }
.sf13b5 {color: #0080c0; background-color: #000000; }
.sf13b14 {color: #0080c0; background-color: #ffa0a0; }
.sf13b16 {color: #0080c0; background-color: #f1e2ad; }
.sf15b2 {color: #000000; background-color: #ffffff; }
.sf15b5 {color: #000000; background-color: #000000; }
.sf15b14 {color: #000000; background-color: #ffa0a0; }
.sf15b16 {color: #000000; background-color: #f1e2ad; }
.sf17b2 {color: #000000; background-color: #ffffff; }
.sf17b5 {color: #000000; background-color: #000000; }
.sf17b14 {color: #000000; background-color: #ffa0a0; }
.sf17b16 {color: #000000; background-color: #f1e2ad; }
.sf18b2 {color: #000080; background-color: #ffffff; }
.sf18b5 {color: #000080; background-color: #000000; }
.sf18b14 {color: #000080; background-color: #ffa0a0; }
.sf18b16 {color: #000080; background-color: #f1e2ad; }
.sf19b2 {color: #0080c0; background-color: #ffffff; }
.sf19b5 {color: #0080c0; background-color: #000000; }
.sf19b14 {color: #0080c0; background-color: #ffa0a0; }
.sf19b16 {color: #0080c0; background-color: #f1e2ad; }
-->
</style>
</head>
<body>
<table cellspacing="0" cellpadding="0" style="width: 100%; margin: 0; border: none;">
<thead>
<tr>
<th class="title" style="width:0%"></th><th class="title" style="width:50.000000%">D:\PAG2_YG\PhasedArray_Master\ServiceApp.cpp</th>
<th class="title" style="width:0%"></th><th class="title" style="width:50.000000%">D:\PhasedArrayGenerator\PhasedArray_Master\ServiceApp.cpp</th>
</tr>
</thead>
<tbody>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">// ServiceApp.cpp: implementation of the CServiceApp class.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">// ServiceApp.cpp: implementation of the CServiceApp class.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">//</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">//</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">////////////////////////////////////////////////<wbr>//////////////////////</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">////////////////////////////////////////////////<wbr>//////////////////////</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include "stdafx.h"</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include "stdafx.h"</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include "ServiceApp.h"</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include "ServiceApp.h"</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include "winsock2.h"</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include "winsock2.h"</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include "math.h"</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include "math.h"</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;windows.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;windows.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;process.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;process.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;stddef.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;stddef.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;stdlib.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;stdlib.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;conio.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;conio.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;ws2spi.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;ws2spi.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;fcntl.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;fcntl.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;io.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;io.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;string.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;string.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;stdio.h&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#include &lt;stdio.h&gt;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#include "InstMsgProcess.h"
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CServiceApp</span><span class="sf11b2"> </span><span class="sf3b2">theApp</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CServiceApp</span><span class="sf11b2"> </span><span class="sf3b2">theApp</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">CheckKey</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">CheckKey</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ClientSocketInit</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ClientSocketInit</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">readn</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">readn</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tRcvrProcessMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tRcvrProcessMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ProcessMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ProcessMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tcpServerWorkTask</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tcpServerWorkTask</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">UINT</span><span class="sf17b16"> </span><span class="sf17b16">tInstMsgProcess</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16">void</span><span class="sf17b16"> </span><span class="sf17b16">*</span><span class="sf17b16">pCInstMsgProcess</span><span class="sf17b16">)</span><span class="sf17b16">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// swap this for tcpServerWorkTask above
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tcpServerWorkTask_WD</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tcpServerWorkTask_WD</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketThread</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketThread</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit_WallDisplay</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit_WallDisplay</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketThread_WallDisplay</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketThread_WallDisplay</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tSendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tSendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tWriteWallDataToFile</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tWriteWallDataToFile</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tSendWallDisplayMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tSendWallDisplayMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ShutDownSystem</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ShutDownSystem</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">repeat</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* Global repeat flag and video variable */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">repeat</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* Global repeat flag and video variable */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// Encapsulate the processing of data from inspection instruments in this class
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">CInstMsgProcess</span><span class="sf17b16">*</span><span class="sf17b16"> </span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">32</span><span class="sf17b16">]</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadClientSocketInit</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadClientSocketInit</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadRcvrProcessMmiMsg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadRcvrProcessMmiMsg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadProcessMmiMsg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadProcessMmiMsg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadServerSocket</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadServerSocket</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadServerSocket_WD</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadServerSocket_WD</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #ef7774; "><code><span style="color: #000000; background-color: #ef7774; ">CWinThread</span><span style="color: #000000; background-color: #ef7774; ">*</span><span style="color: #000000; background-color: #ef7774; "> </span><span class="sf15b14">g_pThreadSlave</span><span class="sf15b14">[</span><span class="sf15b14">NUM_OF_SLAVES</span><span class="sf15b14">]</span><span class="sf15b14">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #ef7774; "><code><span style="color: #000000; background-color: #ef7774; ">CWinThread</span><span style="color: #000000; background-color: #ef7774; ">*</span><span style="color: #000000; background-color: #ef7774; "> </span><span class="sf15b14">g_pThreadSlave</span><span class="sf15b14">[</span><span class="sf15b14">MAX_SHOES</span><span class="sf15b14">]</span><span class="sf15b14">;</span><span class="sf15b14"> &nbsp; &nbsp;</span><span class="sf15b14">// a server task for every client instrument employing tcpServerWorkTask</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadSendRawFlawToMMI</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadSendRawFlawToMMI</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadWriteWallDataToFile</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadWriteWallDataToFile</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadWallDisplay</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadWallDisplay</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadSendWallDisplayMsg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CWinThread</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_pThreadSendWallDisplayMsg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">g_nSlave</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">g_nSlave</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nWD</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nWD</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_hPipeWallDisplay</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_hPipeWallDisplay</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">enum</span><span class="sf11b2"> </span><span class="sf3b2">PIPES</span><span class="sf11b2"> </span><span class="sf11b2">{</span><span class="sf11b2"> </span><span class="sf3b2">READ</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">WRITE</span><span class="sf11b2"> </span><span class="sf11b2">}</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* Constants 0 and 1 for READ and WRITE */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">enum</span><span class="sf11b2"> </span><span class="sf3b2">PIPES</span><span class="sf11b2"> </span><span class="sf11b2">{</span><span class="sf11b2"> </span><span class="sf3b2">READ</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">WRITE</span><span class="sf11b2"> </span><span class="sf11b2">}</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* Constants 0 and 1 for READ and WRITE */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">* &nbsp;Begin Globals */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">* &nbsp;Begin Globals */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">g_SocketSlave</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* TCP sockets for communicating with slaves */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">g_SocketSlave</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* TCP sockets for communicating with slaves */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* TCP socket for communicating with wall display program */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* TCP socket for communicating with wall display program */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRcvrIdataCnt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRcvrIdataCnt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nAuxClkIntCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nAuxClkIntCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nAuxClkIntCnt2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nAuxClkIntCnt2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_fTimePerTurn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* unit: second */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_fTimePerTurn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* unit: second */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_fTimePerInch</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.25f</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* unit: second */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_fTimePerInch</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.25f</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* unit: second */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nLostIdataCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nLostIdataCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">g_bConnected</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">+</span><span class="sf17b16">1</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* network connection status. &nbsp;0: not connected, 1: connected. &nbsp;Master in 0, Slave1 in 1, etc. */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">g_bConnected</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">+</span><span class="sf17b16">1</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* network connection status. &nbsp;0: not connected, 1: connected. &nbsp;Master in 0, Slave1 in 1, etc. */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">g_nBoardRevision</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">+</span><span class="sf17b16">1</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_BOARD_PER_<wbr>INSTRUMENT</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">g_nBoardRevision</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">+</span><span class="sf17b16">1</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_BOARD_PER_INST<wbr>RUMENT</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_SlaveCodeRev</span><span class="sf11b2">[</span><span class="sf10b2">40</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_SlaveCodeRev</span><span class="sf11b2">[</span><span class="sf10b2">40</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_AdiStatus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_AdiStatus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nNoMmiReplyCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nNoMmiReplyCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nXloc_S2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* X location of Station 2 */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nXloc_S2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* X location of Station 2 */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* Angular location in ticks (180 ticks for one full rotation */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* Angular location in ticks (180 ticks for one full rotation */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* period of rotation in 0.1 ms */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* period of rotation in 0.1 ms */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* delta t to travel 4 inches in 1 ms clocks */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* delta t to travel 4 inches in 1 ms clocks */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* next available inspect window for display */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* next available inspect window for display */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* the inspect window to which the station 1 Idata is sent */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* the inspect window to which the station 1 Idata is sent */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation2Window</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* the inspect window to which the station 2 Idata is sent */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation2Window</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* the inspect window to which the station 2 Idata is sent */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nStation2JointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nStation2JointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bStartOfRevS2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bStartOfRevS2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">C_MSG_NC_NX</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">C_MSG_NC_NX</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">WALL_COEF</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">WALL_COEF</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">5001</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">5001</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* distance between the leftmost transducer and the rightmost transducer */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* distance between the leftmost transducer and the rightmost transducer */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nPlcOfWho</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=Master, 1=Instrument 1, etc. */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nPlcOfWho</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=Master, 1=Instrument 1, etc. */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_dwPlc</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_dwPlc</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">900</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">900</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">gGate</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">gGate</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bBcastAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bBcastAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_b20ChnlPerHead</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_b20ChnlPerHead</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nRecordWallData</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nRecordWallData</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bShowWallDiff</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bShowWallDiff</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bSendRawFlawToMMI</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bSendRawFlawToMMI</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_WallDropTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.1f</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* initialized to 0.1 seconds */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_WallDropTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.1f</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* initialized to 0.1 seconds */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">g_ArrayScanNum</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">g_ArrayScanNum</span><span class="sf17b16">[</span><span class="sf17b16">12</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">g_SequenceLength</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">g_SequenceLength</span><span class="sf17b16">[</span><span class="sf17b16">12</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">g_nPhasedArrayScanType</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">g_nPhasedArrayScanType</span><span class="sf17b16">[</span><span class="sf17b16">12</span><span class="sf17b16">]</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">{</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">,</span><span class="sf17b16">2</span><span class="sf17b16">}</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_NOT_PRESENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* temporary */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_NOT_PRESENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* temporary */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* temporary */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* temporary */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nOldXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nOldXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.506329f</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.506329f</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nShowWallBars</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nShowWallBars</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CSCAN_REVOLUTION</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CSCAN_REVOLUTION</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* the buffer to write the raw flaw to */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* the buffer to write the raw flaw to */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">RAW_WALL_HEAD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">RAW_WALL_HEAD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">WALL_REVOLUTION</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">WALL_REVOLUTION</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">RAW_WALL_HEAD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">RAW_WALL_HEAD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">WALL_REVOLUTION</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallCopy</span><span class="sf11b2">[</span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">WALL_REVOLUTION</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallCopy</span><span class="sf11b2">[</span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nXlocRevStart</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* starting X location of the revolution */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nXlocRevStart</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* starting X location of the revolution */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">InitRawWallBuf</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">InitRawWallBuf</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">JOB_REC</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_JobRec</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">JOB_REC</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">g_JobRec</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2">=</span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2">=</span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">I_MSG_CAL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">I_MSG_CAL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBufin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nBufout</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index from 0-IMAGE_BUF_DIM - 1 */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBufin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nBufout</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index from 0-IMAGE_BUF_DIM - 1 */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBufcnt</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* image buffer management */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBufcnt</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* image buffer management */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nFlush</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nFlush</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">* &nbsp;End Globals */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">* &nbsp;End Globals */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*************** BEGIN FUNCTION PROTOTYPES ******************/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*************** BEGIN FUNCTION PROTOTYPES ******************/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">FlushImageBufArray</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">FlushImageBufArray</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">PipeInProcess</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">PipeInProcess</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">PipeOutProcess</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">PipeOutProcess</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">Inspection_Process_Control</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">Inspection_Process_Control</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=Get */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=Get */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=Get */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=Get */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMinXOffset</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMinXOffset</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXSpan</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXSpan</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NiosRawData_to_PeakData</span><span class="sf11b2">(</span><span class="sf3b2">SRawDataPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pInspData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">PEAK_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pPeakData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NiosRawData_to_PeakData</span><span class="sf11b2">(</span><span class="sf3b2">SRawDataPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pInspData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">PEAK_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pPeakData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NC_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">AmpID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">AmpOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">FlawID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">FlawOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NC_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">AmpID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">AmpOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">FlawID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">FlawOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NX_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">Wall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">WallMin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">WallMax</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstAscan</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NX_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">Wall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">WallMin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">WallMax</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstAscan</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">PipeIsPresent</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2">;</span><span class="sf11b2">}</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">PipeIsPresent</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2">;</span><span class="sf11b2">}</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">socketFD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">socketFD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">BoxIsEnabled</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBox</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">{</span><span class="sf11b2"> </span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span><span class="sf11b2">}</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">BoxIsEnabled</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBox</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">{</span><span class="sf11b2"> </span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span><span class="sf11b2">}</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">BuildCalMsg</span><span class="sf11b2">(</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">BuildCalMsg</span><span class="sf11b2">(</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">BuildImageMap</span><span class="sf11b2">(</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">si</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bStartOfRev</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">BuildImageMap</span><span class="sf11b2">(</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">si</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bStartOfRev</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf8b2">GetNextImageBuf</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf8b2">GetNextImageBuf</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">GetNextRealTimeImageBuf</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">pIBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">GetNextRealTimeImageBuf</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">pIBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ComputeEcc</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pRun</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pThold</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ComputeEcc</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pRun</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pThold</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SendPipeLocation</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nStation</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SendPipeLocation</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nStation</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nArray</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nArrayCh</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nArray</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nArrayCh</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ComputeTranFocusDelay</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">thickness</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">zf_value</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">water_path</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">incident_angle</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">td</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ComputeTranFocusDelay</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">thickness</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">zf_value</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">water_path</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">incident_angle</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">td</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*************** END FUNCTION PROTOTYPES ******************/</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*************** END FUNCTION PROTOTYPES ******************/</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">////////////////////////////////////////////////<wbr>//////////////////////</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">////////////////////////////////////////////////<wbr>//////////////////////</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">// Construction/Destruction</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">// Construction/Destruction</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">////////////////////////////////////////////////<wbr>//////////////////////</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">////////////////////////////////////////////////<wbr>//////////////////////</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CServiceApp</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">CServiceApp</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CServiceApp</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">CServiceApp</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf8b2">CNTService</span><span class="sf11b2">(</span><span class="sf8b2">TEXT</span><span class="sf11b2">(</span><span class="sf12b2">"PhasedArray_Master"</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf8b2">TEXT</span><span class="sf11b2">(</span><span class="sf12b2">"Phased Array Master"</span><span class="sf11b2">)</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf8b2">CNTService</span><span class="sf11b2">(</span><span class="sf8b2">TEXT</span><span class="sf11b2">(</span><span class="sf12b2">"PhasedArray_Master"</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf8b2">TEXT</span><span class="sf11b2">(</span><span class="sf12b2">"Phased Array Master"</span><span class="sf11b2">)</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf8b2">m_hStop</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf8b2">m_hStop</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* initialized to an invalid socket. */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* initialized to an invalid socket. */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bConnected</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bConnected</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">for</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16"> </span><span class="sf17b16">i</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">0</span><span class="sf17b16">;</span><span class="sf17b16"> </span><span class="sf17b16">i</span><span class="sf17b16"> </span><span class="sf17b16">&lt;</span><span class="sf17b16"> </span><span class="sf17b16">32</span><span class="sf17b16">;</span><span class="sf17b16"> </span><span class="sf17b16">i</span><span class="sf17b16">+</span><span class="sf17b16">+</span><span class="sf17b16">)</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">i</span><span class="sf17b16">]</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">NULL</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// &nbsp;g_pInstMsgProcess[0] = new CInstMsgProcess(0); &nbsp;// DEBUGGING</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Long</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Long</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Long</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Long</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Tran</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Tran</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Tran</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Tran</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq1</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq1</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq1</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq1</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq2</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq2</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq2</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq2</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq3</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq3</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq3</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq3</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Lamin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Lamin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Lamin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Lamin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// &nbsp;delete g_pInstMsgProcess[0]; &nbsp; &nbsp;// DEBUGGING</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// &nbsp;g_pInstMsgProcess[0] = NULL;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">.</span><span class="sf3b2">fWallSlope</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">1.0f</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">.</span><span class="sf3b2">fWallSlope</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">1.0f</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">.</span><span class="sf3b2">WallOffset</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">.</span><span class="sf3b2">WallOffset</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">12</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_nPhasedArrayScanType</span><span class="sf17b16">[</span><span class="sf17b16">i</span><span class="sf17b16">]</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">2</span><span class="sf17b16">;
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CServiceApp</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf11b2">~</span><span class="sf8b2">CServiceApp</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">CServiceApp</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf11b2">~</span><span class="sf8b2">CServiceApp</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">int</span><span class="sf17b16"> </span><span class="sf17b16">i</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">for</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16"> </span><span class="sf17b16">i</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">0</span><span class="sf17b16">;</span><span class="sf17b16"> </span><span class="sf17b16">i</span><span class="sf17b16"> </span><span class="sf17b16">&lt;</span><span class="sf17b16"> </span><span class="sf17b16">32</span><span class="sf17b16">;</span><span class="sf17b16"> </span><span class="sf17b16">i</span><span class="sf17b16">+</span><span class="sf17b16">+</span><span class="sf17b16">)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">{
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">if</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16"> </span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">i</span><span class="sf17b16">]</span><span class="sf17b16">)</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">delete</span><span class="sf17b16"> </span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">i</span><span class="sf17b16">]</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">i</span><span class="sf17b16">]</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">NULL</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">}
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">CServiceApp</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf8b2">InitInstance</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">CServiceApp</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf8b2">InitInstance</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RegisterService</span><span class="sf11b2">(</span><span class="sf3b2">__argc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">__argv</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RegisterService</span><span class="sf11b2">(</span><span class="sf3b2">__argc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">__argv</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf3b2">CServiceApp</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf8b2">Run</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">DWORD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">LPTSTR</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf3b2">CServiceApp</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf8b2">Run</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">DWORD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">LPTSTR</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// args not used in this small example</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// args not used in this small example</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// report to the SCM that we're about to start</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// report to the SCM that we're about to start</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ReportStatus</span><span class="sf11b2">(</span><span class="sf3b2">SERVICE_START_PENDING</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ReportStatus</span><span class="sf11b2">(</span><span class="sf3b2">SERVICE_START_PENDING</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_hStop</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">CreateEvent</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_hStop</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">CreateEvent</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// You might do some more initialization here.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// You might do some more initialization here.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Parameter processing for instance ...</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Parameter processing for instance ...</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// report SERVICE_RUNNING immediately before you enter the main-loop</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// report SERVICE_RUNNING immediately before you enter the main-loop</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// DON'T FORGET THIS!</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// DON'T FORGET THIS!</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ReportStatus</span><span class="sf11b2">(</span><span class="sf3b2">SERVICE_RUNNING</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ReportStatus</span><span class="sf11b2">(</span><span class="sf3b2">SERVICE_RUNNING</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;FILE *ipfile;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;FILE *ipfile;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;CString sip;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;CString sip;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;ipfile = fopen("ip_address.txt","r");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;ipfile = fopen("ip_address.txt","r");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;if (ipfile == &nbsp;NULL)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;if (ipfile == &nbsp;NULL)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;goto service_exit;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;goto service_exit;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;//read the ip address and close the file</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;//read the ip address and close the file</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;fscanf(ipfile, "%s", sip);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;fscanf(ipfile, "%s", sip);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;//if ( (sip != "192.168.8.10") &amp;&amp; (sip != "192.168.8.200") )</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;//if ( (sip != "192.168.8.10") &amp;&amp; (sip != "192.168.8.200") )</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;//goto service_exit;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;//goto service_exit;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;fclose (ipfile);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp;fclose (ipfile);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">/</span><span class="sf17b16">*
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of PACKET_STATS is %d\r\n", sizeof(PACKET_STATS));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of UDP_CMD_HDR is %d\r\n", sizeof(UDP_CMD_HDR));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of SLAVE_HDR is %d\r\n", sizeof(SLAVE_HDR));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of UDP_CMD is %d\r\n", sizeof(UDP_CMD));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of UDP_SLAVE_DATA is %d\r\n", sizeof(UDP_SLAVE_DATA));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of INST_DATA is %d\r\n", sizeof(INST_DATA));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of IPXHEADER is %d\r\n", sizeof(IPXHEADER));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of PACKET_DATA is %d\r\n", sizeof(PACKET_DATA));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of INST_CMD_DATA is %d\r\n", sizeof(INST_CMD_DATA));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of MMI_CMD is %d\r\n", sizeof(MMI_CMD));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of UT_SHOE is %d\r\n", sizeof(UT_SHOE));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of INSP_HDR is %d\r\n", sizeof(INSP_HDR));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of UT_INSP is %d\r\n", sizeof(UT_INSP));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of I_MSG_RUN is %d\r\n", sizeof(I_MSG_RUN));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of I_MSG_CAL is %d\r\n", sizeof(I_MSG_CAL));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of I_MSG_PKT is %d\r\n", sizeof(I_MSG_PKT));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of I_MSG_NET is %d\r\n", sizeof(I_MSG_NET));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">printf("Size of SITE_SPECIFIC_DEFAULTS is %d\r\n", sizeof(SITE_SPECIFIC_DEFAULTS));
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">*/</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">_pipe</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">O_BINARY</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">_pipe</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">O_BINARY</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Failed creating pipe.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Failed creating pipe.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">service_exit</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">service_exit</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">_pipe</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeWallDisplay</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">O_BINARY</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">_pipe</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeWallDisplay</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">O_BINARY</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Failed creating pipe.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Failed creating pipe.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">service_exit</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">service_exit</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitRawWallBuf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitRawWallBuf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WSADATA</span><span class="sf11b2"> </span><span class="sf3b2">wsaData</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WSADATA</span><span class="sf11b2"> </span><span class="sf3b2">wsaData</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rv</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rv</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rv</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">WSAStartup</span><span class="sf11b2">(</span><span class="sf10b2">0x0202</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">wsaData</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">// &nbsp;Must be 1st fcn call</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rv</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">WSAStartup</span><span class="sf11b2">(</span><span class="sf10b2">0x0202</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">wsaData</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">// &nbsp;Must be 1st fcn call</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rv</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rv</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ErrMsgSockStartup(rv);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ErrMsgSockStartup(rv);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("This program will not run without Winsock 2"));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("This program will not run without Winsock 2"));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Can't start Winsock 2.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Can't start Winsock 2.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">service_exit</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">service_exit</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Launch CheckKey thread to check for terminating keystroke. */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Launch CheckKey thread to check for terminating keystroke. */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//_beginthread( CheckKey, 0, NULL );</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//_beginthread( CheckKey, 0, NULL );</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// This program is a server to the inspection machine clients
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">repeat_serverinit</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">repeat_serverinit</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadServerSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ServerSocketThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadServerSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ServerSocketThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// if we can create a server socket, we will start a server thread to accept connections from 
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// the instrument pulser-receiver clients
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Failed ServerSocketInit.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Failed ServerSocketInit.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//goto service_exit;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//goto service_exit;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">TRACE</span><span class="sf17b16">(</span><span class="sf17b16">_T</span><span class="sf17b16">(</span><span class="sf17b16">"ServerSocketInit() failed\n"</span><span class="sf17b16">)</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">_tprintf</span><span class="sf17b16">(</span><span class="sf17b16">TEXT</span><span class="sf17b16">(</span><span class="sf17b16">"ServerSocketInit() failed\n"</span><span class="sf17b16">)</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">500</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">500</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">repeat_serverinit</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">repeat_serverinit</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// This program is a server to the program to display wall readings as a bar chart (WallDisplay.exe)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">repeat_serverinit_WD</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">repeat_serverinit_WD</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit_WallDisplay</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit_WallDisplay</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadServerSocket_WD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ServerSocketThread_WallDisplay</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadServerSocket_WD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ServerSocketThread_WallDisplay</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Failed ServerSocketInit.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Failed ServerSocketInit.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//goto service_exit;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//goto service_exit;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">500</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">500</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">repeat_serverinit_WD</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">repeat_serverinit_WD</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadClientSocketInit</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ClientSocketInit</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadClientSocketInit</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ClientSocketInit</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadRcvrProcessMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tRcvrProcessMmiMsg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadRcvrProcessMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tRcvrProcessMmiMsg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadProcessMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ProcessMmiMsg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadProcessMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ProcessMmiMsg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadSendRawFlawToMMI</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tSendRawFlawToMMI</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadSendRawFlawToMMI</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tSendRawFlawToMMI</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadWriteWallDataToFile</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tWriteWallDataToFile</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadWriteWallDataToFile</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tWriteWallDataToFile</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadSendWallDisplayMsg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tSendWallDisplayMsg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadSendWallDisplayMsg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tSendWallDisplayMsg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">sendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">sendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_NET</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_NET</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_NET</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_NET</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NET_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NET_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">bConnected</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">bConnected</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// enter main-loop</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// enter main-loop</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// If the Stop() method sets the event, then we will break out of</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// If the Stop() method sets the event, then we will break out of</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// this loop.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// this loop.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">m_hStop</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WAIT_OBJECT_0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">m_hStop</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WAIT_OBJECT_0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// popup a small message box every 10 seconds</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// popup a small message box every 10 seconds</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::MessageBox(0, TEXT("Hi, here is your very first MFC based NT-service"), TEXT("MFC SampleService"), MB_OK);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::MessageBox(0, TEXT("Hi, here is your very first MFC based NT-service"), TEXT("MFC SampleService"), MB_OK);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">1</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">+</span><span class="sf17b16">1</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">1</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">+</span><span class="sf17b16">1</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">bConnected</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_bConnected</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">bConnected</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_bConnected</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pNetBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("send call failed.\nMessage ID = "+str));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("send call failed.\nMessage ID = "+str));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//return FALSE;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//return FALSE;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bConnected</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bConnected</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf10b2">3000</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf10b2">3000</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(sip);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(sip);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// while waiting for stop
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">/</span><span class="sf17b16">********** &nbsp;SHUT DOWN SEQUENCE ************/</span><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">m_hStop</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">m_hStop</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">CloseHandle</span><span class="sf11b2">(</span><span class="sf3b2">m_hStop</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">CloseHandle</span><span class="sf11b2">(</span><span class="sf3b2">m_hStop</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadClientSocketInit</span><span class="sf11b2">-<wbr></span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadClientSocketInit</span><span class="sf11b2">-<wbr></span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Exit ClientSocketInit Thread successfully.");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Exit ClientSocketInit Thread successfully.");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadRcvrProcessMmiMsg<wbr></span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">10000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadRcvrProcessMmiMsg<wbr></span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">10000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Exit tRcvrProcessMmiMsg Thread successfully.");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Exit tRcvrProcessMmiMsg Thread successfully.");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">[</span><span class="sf3b2">WRITE</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">[</span><span class="sf3b2">WRITE</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">4</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">4</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//close( g_hPipeMmiMsg[READ] );</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//close( g_hPipeMmiMsg[READ] );</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadProcessMmiMsg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_<wbr>hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">10000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadProcessMmiMsg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_<wbr>hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">10000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Exit tRcvrProcessMmiMsg Thread successfully.");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Exit tRcvrProcessMmiMsg Thread successfully.");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">dummy</span><span class="sf11b2">[</span><span class="sf10b2">1000</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">dummy</span><span class="sf11b2">[</span><span class="sf10b2">1000</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeWallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">WRITE</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">dummy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeWallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">WRITE</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">dummy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">4</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">4</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadSendWallDisplayMs<wbr>g</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">10000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadSendWallDisplayMs<wbr>g</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">10000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadServerSocket</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_h<wbr>Thread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadServerSocket</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_h<wbr>Thread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadServerSocket_WD</span><span class="sf11b2">-</span><span class="sf11b2">&gt;<wbr></span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadServerSocket_WD</span><span class="sf11b2">-</span><span class="sf11b2">&gt;<wbr></span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThre<wbr>ad</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThre<wbr>ad</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadWallDisplay</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hT<wbr>hread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadWallDisplay</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hT<wbr>hread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadSendRawFlawToMMI</span><span class="sf11b2">-<wbr></span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadSendRawFlawToMMI</span><span class="sf11b2">-<wbr></span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadWriteWallDataToFi<wbr>le</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">WaitForSingleObject</span><span class="sf11b2">(</span><span class="sf3b2">g_pThreadWriteWallDataToFi<wbr>le</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">m_hThread</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">INFINITE</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">service_exit</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">service_exit</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//_getch();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//_getch();</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">WSACleanup</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">// &nbsp;Free resources allocated by WSAStartup() &nbsp; &nbsp;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">WSACleanup</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">// &nbsp;Free resources allocated by WSAStartup() &nbsp; &nbsp;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">close</span><span class="sf17b16">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_hPipeMmiMsg</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">READ</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">_close</span><span class="sf17b16">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_hPipeMmiMsg</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">READ</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">close</span><span class="sf17b16">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_hPipeMmiMsg</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">WRITE</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">_close</span><span class="sf17b16">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_hPipeMmiMsg</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">WRITE</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">close</span><span class="sf17b16">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_hPipeWallDisplay</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">READ</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">_close</span><span class="sf17b16">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_hPipeWallDisplay</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">READ</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">close</span><span class="sf17b16">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_hPipeWallDisplay</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">WRITE</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span class="sf17b16">_close</span><span class="sf17b16">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_hPipeWallDisplay</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">WRITE</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ReportStatus</span><span class="sf11b2">(</span><span class="sf3b2">SERVICE_STOPPED</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ReportStatus</span><span class="sf11b2">(</span><span class="sf3b2">SERVICE_STOPPED</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf3b2">CServiceApp</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf8b2">Stop</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf3b2">CServiceApp</span><span class="sf11b2"> </span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf8b2">Stop</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// report to the SCM that we're about to stop</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// report to the SCM that we're about to stop</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Note that the service might Sleep(), so we have to tell</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Note that the service might Sleep(), so we have to tell</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// the SCM</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// the SCM</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// &nbsp;"The next operation may take me up to 11 seconds. Please be patient."</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// &nbsp;"The next operation may take me up to 11 seconds. Please be patient."</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ReportStatus</span><span class="sf11b2">(</span><span class="sf3b2">SERVICE_STOP_PENDING</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">11000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ReportStatus</span><span class="sf11b2">(</span><span class="sf3b2">SERVICE_STOP_PENDING</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">11000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">m_hStop</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">m_hStop</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">SetEvent</span><span class="sf11b2">(</span><span class="sf3b2">m_hStop</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">SetEvent</span><span class="sf11b2">(</span><span class="sf3b2">m_hStop</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">* CheckKey - Thread to wait for a keystroke, then clear repeat flag. */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">* CheckKey - Thread to wait for a keystroke, then clear repeat flag. */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">CheckKey</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">CheckKey</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">_getch</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">'c'</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">_getch</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">'c'</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">repeat</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* _endthread implied */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">repeat</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* _endthread implied */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_endthread</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_endthread</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// Try to connect to the TruWall MMI control program
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ClientSocketInit</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ClientSocketInit</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf3b2">serverAddr</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf3b2">serverAddr</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">socketFD</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">socketFD</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">unsigned</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf3b2">nPortNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">7501</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">unsigned</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf3b2">nPortNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">7501</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Set up the server address */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Set up the server address */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">.</span><span class="sf3b2">sin_family</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">.</span><span class="sf3b2">sin_family</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">.</span><span class="sf3b2">sin_port</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htons</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nPortNumber</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* the port number must be the same as that in the concentrator code */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">.</span><span class="sf3b2">sin_port</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htons</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nPortNumber</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* the port number must be the same as that in the concentrator code */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">inet_addr</span><span class="sf11b2">(</span><span class="sf12b2">"192.168.10.10"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">inet_addr</span><span class="sf11b2">(</span><span class="sf12b2">"192.168.10.10"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* create client's socket */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* create client's socket */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">socket</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SOCK_STREAM</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ERROR</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">socket</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SOCK_STREAM</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ERROR</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("ClientSocketInit - socket call failed.");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("ClientSocketInit - socket call failed.");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* connect to server */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* connect to server */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf8b2">connect</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf8b2">connect</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">serverAddr</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Master - Connect call failed. &nbsp;Try again.");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Master - Connect call failed. &nbsp;Try again.");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">socket</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SOCK_STREAM</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ERROR</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">socket</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SOCK_STREAM</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ERROR</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Phased Array Master - socket call failed.");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox("Phased Array Master - socket call failed.");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">5000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">5000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return FALSE; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return FALSE; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">socketFD</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">socketFD</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//signify the thread has exited.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//signify the thread has exited.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// create a server socket so that instruments can connect to this command line program (PhasedArray_Master.exe)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// via tcp/ip. Address is usually 192.168.10.10 port 7502
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf3b2">local</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf3b2">local</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">//static</span><span style="color: #000000; background-color: #efcb05; "> int nCnt = 0;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">nCnt</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_family</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_family</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_port</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htons</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf10b2">7502</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_port</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htons</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf10b2">7502</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htonl</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">INADDR_ANY</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htonl</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">INADDR_ANY</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">inet_addr</span><span class="sf11b2">(</span><span class="sf12b2">"192.168.10.10"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">inet_addr</span><span class="sf11b2">(</span><span class="sf12b2">"192.168.10.10"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">socket</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SOCK_STREAM</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">socket</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SOCK_STREAM</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Socket call failed."));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Socket call failed."));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("socket call failed.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("socket call failed.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">bind</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">&amp;</span><span class="sf3b2">local</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">local</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">bind</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">&amp;</span><span class="sf3b2">local</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">local</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">if</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16"> </span><span class="sf17b16">rc</span><span class="sf17b16"> </span><span class="sf17b16">&lt;</span><span class="sf17b16"> </span><span class="sf17b16">0</span><span class="sf17b16"> </span><span class="sf17b16">)</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">// associates a local address with a socket</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">{</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">/</span><span class="sf17b16">*</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">// If no error occurs, bind returns zero</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">if</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16"> </span><span class="sf17b16">0</span><span class="sf17b16"> </span><span class="sf17b16">!</span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">rc</span><span class="sf17b16"> </span><span class="sf17b16">)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">{</span><span class="sf17b16"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#if 0
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;if (nCnt &lt; 5)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nCnt</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nCnt++;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCnt</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="sf17b16">//AfxMessageBox(_T("Bind</span><span style="color: #000000; background-color: #efcb05; "> call failed.\nNetwork cable might be unplugged.\nNetwork switch might not be powered on."));</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">AfxMessageBox</span><span class="sf17b16">(</span><span class="sf17b16">_T</span><span class="sf17b16">(</span><span class="sf17b16">"Bind</span><span style="color: #000000; background-color: #efcb05; "> call failed.\nNetwork cable might be unplugged.\nNetwork switch might not be powered on."</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="sf17b16">//printf("Bind</span><span style="color: #000000; background-color: #efcb05; "> call failed.\n");</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">printf</span><span class="sf17b16">(</span><span class="sf17b16">"Bind</span><span style="color: #000000; background-color: #efcb05; "> call failed.\n"</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="sf17b16">*/</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#endif</span><span class="sf17b16"> &nbsp; &nbsp; &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">nSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">nSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">listen</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">listen</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// places a socket in a state where it is listening for an incoming connection
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Listen call failed."));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Listen call failed."));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("listen call failed.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("listen call failed.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">nSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">nSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//StartServerSocketThread();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//StartServerSocketThread();</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// This thread only starts if the ServerSocketInit succeeded in creating a listening socket
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// creates a connection for as many clients as are listening at the time it is called
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// but not more than MAX_SHOES. These are instrument clients
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">//
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketThread</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketThread</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">nClientSocket</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">nClientSocket</span><span class="sf17b16">,</span><span class="sf17b16"> </span><span class="sf17b16">nTmpSocket</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//DWORD optval = 1;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//DWORD optval = 1;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">clientAddr</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* client's socket address */</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">clientAddr</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* client's socket address */</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* size of socket address structure */</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* size of socket address structure */</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">CWinThread</span><span class="sf17b16"> </span><span class="sf17b16">*</span><span class="sf17b16">pThread</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nClientSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">accept</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">clientAddr</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nClientSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">accept</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nServerSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">clientAddr</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// the accept function returns as soon as it receives a CONNECT ACK message
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">//AfxMessageBox(_T("accept</span><span style="color: #000000; background-color: #efcb05; "> call failed"));</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">AfxMessageBox</span><span class="sf17b16">(</span><span class="sf17b16">_T</span><span class="sf17b16">(</span><span class="sf17b16">"accept</span><span style="color: #000000; background-color: #efcb05; "> call failed"</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">ntohl</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">clientAddr</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">0xC0A80AC9</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0xC0A808C9 = 192.168.10.201 */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">ntohl</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">clientAddr</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">0xC0A80AC9</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0xC0A808C9 = 192.168.10.201 */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">if</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">nWhichSlave</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&amp;</span><span style="color: #000000; background-color: #efcb05; ">&amp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">nWhichSlave</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&lt;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">)</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">if</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">nWhichSlave</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&amp;</span><span style="color: #000000; background-color: #efcb05; ">&amp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">nWhichSlave</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&lt;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">32</span><span class="sf17b16">)</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// MAX_SHOES)</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// CHANGE from global arrays to handle connections to instance of InstMsgProcess class
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#if 0
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">{</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">{</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// it had a previous connection associated with it
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">200</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">200</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#endif
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">if</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16">)</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// class instance already servicing this connection
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">{
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">nTmpSocket</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16">-</span><span class="sf17b16">&gt;</span><span class="sf17b16">GetSocket</span><span class="sf17b16">(</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">//if (nTmpSocket &gt;= 0) &nbsp;closesocket(nTmpSocket); &nbsp; &nbsp;// see destructor below</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">delete</span><span class="sf17b16"> </span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// closes open socket
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">NULL</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">:</span><span class="sf17b16">:</span><span class="sf17b16">Sleep</span><span class="sf17b16">(</span><span class="sf17b16">200</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">}
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#if 0
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* for Slave 1, nWhichSlave = 0. */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* for Slave 1, nWhichSlave = 0. */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// Start a tcpip connection and thread for every client instrument
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// When the instrument sends data, this thread processes the data and ships it to 
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// other threads as needed for further processing
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tcpServerWorkTask</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_nSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tcpServerWorkTask</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_nSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#endif
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// create a new instance of the class and use the socket which has just been made
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">new</span><span class="sf17b16"> </span><span class="sf17b16">CInstMsgProcess</span><span class="sf17b16">(</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">if</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16">)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">{
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16">-</span><span class="sf17b16">&gt;</span><span class="sf17b16">SetSocket</span><span class="sf17b16">(</span><span class="sf17b16">nClien<wbr>tSocket</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_SocketSlave</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">nClientSocket</span><span class="sf17b16">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// debug feature
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16">-</span><span class="sf17b16">&gt;</span><span class="sf17b16">m_bConnected</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">1</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">pThread</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">AfxBeginThread</span><span class="sf17b16">(</span><span class="sf17b16">tInstMsgProcess</span><span class="sf17b16">,</span><span class="sf17b16"> </span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16">,</span><span class="sf17b16"> </span><span class="sf17b16">THREAD_PRIORITY_NORMAL</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_pThreadSlave</span><span class="sf17b16">[</span><span class="sf17b16">nWhichSlave</span><span class="sf17b16">]</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">pThread</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">}
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">else
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">{</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// fatal error
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">AfxMessageBox</span><span class="sf17b16">(</span><span class="sf17b16">"Fatal Error - failed to create new CInstMsgProcess"</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">return</span><span class="sf17b16"> </span><span class="sf17b16">0</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">}
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// legacy code
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">*setsockopt(</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">*setsockopt(</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;g_SocketSlave[nWhichSlave],</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;g_SocketSlave[nWhichSlave],</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SOL_SOCKET,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SOL_SOCKET,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;TCP_NODELAY,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;TCP_NODELAY,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(const char FAR *) &amp;optval,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(const char FAR *) &amp;optval,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sizeof(optval)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sizeof(optval)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;);*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;);*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Master connected to MMI successfully."));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Master connected to MMI successfully."));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxBeginThread(ServerSocketThread, nSocket, THREAD_PRIORITY_NORMAL);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxBeginThread(ServerSocketThread, nSocket, THREAD_PRIORITY_NORMAL);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// while (1)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// Waits for a connection attempt by the Wall Bar Display client (WallDisplay.exe)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">//
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit_WallDisplay</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketInit_WallDisplay</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf3b2">local</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf3b2">local</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//static int nCnt = 0;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//static int nCnt = 0;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_family</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_family</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_port</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htons</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf10b2">7515</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_port</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htons</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf10b2">7515</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htonl</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">INADDR_ANY</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">htonl</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">INADDR_ANY</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">inet_addr</span><span class="sf11b2">(</span><span class="sf12b2">"192.168.10.10"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">local</span><span class="sf11b2">.</span><span class="sf3b2">sin_addr</span><span class="sf11b2">.</span><span class="sf3b2">s_addr</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">inet_addr</span><span class="sf11b2">(</span><span class="sf12b2">"192.168.10.10"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">socket</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SOCK_STREAM</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">socket</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">AF_INET</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SOCK_STREAM</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Socket call failed."));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Socket call failed."));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("socket call failed.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("socket call failed.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">bind</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">&amp;</span><span class="sf3b2">local</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">local</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">bind</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">&amp;</span><span class="sf3b2">local</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">local</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;if (nCnt &lt; 5)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;if (nCnt &lt; 5)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nCnt++;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nCnt++;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//AfxMessageBox(_T("Bind call failed.\nNetwork cable might be unplugged.\nNetwork switch might not be powered on."));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//AfxMessageBox(_T("Bind call failed.\nNetwork cable might be unplugged.\nNetwork switch might not be powered on."));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//printf("Bind call failed.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//printf("Bind call failed.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp;*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">nSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">nSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">listen</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">listen</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Listen call failed."));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Listen call failed."));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("listen call failed.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("listen call failed.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">nSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">nSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//StartServerSocketThread();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//StartServerSocketThread();</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSocket</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketThread_WallDisplay</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ServerSocketThread_WallDisplay</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//DWORD optval = 1;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//DWORD optval = 1;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">clientAddr</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* client's socket address */</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">clientAddr</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* client's socket address */</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* size of socket address structure */</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">sockAddrSize</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* size of socket address structure */</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">nWhichSlave</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">//</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;int &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nWhichSlave;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr_in</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nClientSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">accept</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">clientAddr</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nClientSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">accept</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nServerSocketWD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">struct</span><span class="sf11b2"> </span><span class="sf3b2">sockaddr</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">clientAddr</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">sockAddrSize</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("accept call failed"));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("accept call failed"));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">200</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">200</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClientSocket</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tcpServerWorkTask_WD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_nWD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">tcpServerWorkTask_WD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_nWD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">THREAD_PRIORITY_NORMAL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">*setsockopt(</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">*setsockopt(</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;g_SocketSlave[nWhichSlave],</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;g_SocketSlave[nWhichSlave],</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SOL_SOCKET,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SOL_SOCKET,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;TCP_NODELAY,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;TCP_NODELAY,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(const char FAR *) &amp;optval,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(const char FAR *) &amp;optval,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sizeof(optval)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sizeof(optval)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;);*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;);*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Master connected to MMI successfully."));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxMessageBox(_T("Master connected to MMI successfully."));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxBeginThread(ServerSocketThread, nSocket, THREAD_PRIORITY_NORMAL);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//AfxBeginThread(ServerSocketThread, nSocket, THREAD_PRIORITY_NORMAL);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>****</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>****</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; readn - read exactly n bytes from Tcp socket fd</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; readn - read exactly n bytes from Tcp socket fd</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">************************************************<wbr>****/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">************************************************<wbr>****/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">readn</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">readn</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// recv will block if no data is available and the socket is synchronous
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// if the socket is async, &nbsp;WSAEWOULDBLOCK is returned if no data is available</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">recv</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">recv</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* read error? */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* read error? */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">WSAGetLastError</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WSAEINTR</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* interrupted? */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">WSAGetLastError</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WSAEINTR</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* interrupted? */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">continue</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* restart the read */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">continue</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* restart the read */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return error */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return error */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* EOF? */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* EOF? */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return short count */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return short count */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">bp</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">bp</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">* Thread receiving MMI messages */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">* Thread receiving MMI messages */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tRcvrProcessMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tRcvrProcessMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf3b2">rcvrBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf3b2">rcvrBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf8b2">readn</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">rcvrBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf8b2">readn</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">rcvrBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunRcvrProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRunClientSocketInitThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadClientSocketInit</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ClientSocketInit</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_pThreadClientSocketInit</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AfxBeginThread</span><span class="sf11b2">(</span><span class="sf3b2">ClientSocketInit</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ProcessMmiMsg(&amp;rcvrBuf);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ProcessMmiMsg(&amp;rcvrBuf);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">[</span><span class="sf3b2">WRITE</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">rcvrBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">[</span><span class="sf3b2">WRITE</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">rcvrBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if (rc &lt;0)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if (rc &lt;0)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("write pipe failed.");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("write pipe failed.");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">2000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">2000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>****</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>****</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; readn - read exactly n bytes from pipe</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; readn - read exactly n bytes from pipe</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">************************************************<wbr>****/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">************************************************<wbr>****/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">readnpipe</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">readnpipe</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_read</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_read</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">fd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">bp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* read error? */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* read error? */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return error */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return error */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* EOF? */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* EOF? */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return short count */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">cnt</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* return short count */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">bp</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">bp</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cnt</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">len</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*****************************</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*****************************</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Helper: &nbsp;process MMI message</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Helper: &nbsp;process MMI message</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ProcessMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">ProcessMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf3b2">readBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf3b2">readBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pMmiCmd</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">readBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pMmiCmd</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">readBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWArg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWArg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pDWArg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pDWArg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pFArg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pFArg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">MsgId</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">MsgId</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* generic looper */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* generic looper */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nGate</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nGate</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">old_gChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">old_gChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SHOE_CONFIG</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pShCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SHOE_CONFIG</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pShCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pThold</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pThold</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WALL_COEF</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWallCoef</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WALL_COEF</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWallCoef</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">nEnableAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">nEnableAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">JOB_REC</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pJobRec</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">JOB_REC</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pJobRec</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">C_MSG_NC_NX</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pNcNx</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">C_MSG_NC_NX</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">C_MSG_NC_NX</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pNcNx</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">C_MSG_NC_NX</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pJobRec</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">JOB_REC</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pJobRec</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">JOB_REC</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pDWArg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pDWArg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pFArg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pFArg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pShCfg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SHOE_CONFIG</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pShCfg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SHOE_CONFIG</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pThold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pThold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunProcessMmiMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">readnpipe</span><span class="sf11b2">(</span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">[</span><span class="sf3b2">READ</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">readBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">readnpipe</span><span class="sf11b2">(</span><span class="sf3b2">g_hPipeMmiMsg</span><span class="sf11b2">[</span><span class="sf3b2">READ</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">readBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">MMI_CMD</span><span class="sf11b2">)</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//nWhichSlave = nChannel / g_NumberOfScans;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//nWhichSlave = nChannel / g_NumberOfScans;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">MsgId</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">MsgId</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_SELECT</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_SELECT</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">;</span><span class="sf9b2">// % MAX_CHANNEL_PER_INSTRUMENT;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">;</span><span class="sf9b2">// % MAX_CHANNEL_PER_INSTRUMENT;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//nWhichSlave = nChannel / g_NumberOfScans;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//nWhichSlave = nChannel / g_NumberOfScans;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pWArg[0] = nChannel % g_NumberOfScans;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pWArg[0] = nChannel % g_NumberOfScans;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PKT_MODE</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PKT_MODE</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if active channel is changed from one slave to another */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if active channel is changed from one slave to another */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">/</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">old_gChannel</span><span class="sf11b2">/</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">/</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">old_gChannel</span><span class="sf11b2">/</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">old_gChannel</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">old_gChannel</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PKT_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PKT_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tempCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">old_gChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">old_gChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_SEQ</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_SEQ</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("set ascan read seq.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("set ascan read seq.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_BEAM</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_BEAM</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATE_SELECT</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATE_SELECT</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nGate</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">MAX_GATES</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nGate</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">MAX_GATES</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">gGate</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nGate</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">gGate</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nGate</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PULSER_ONOFF</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PULSER_ONOFF</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PULSER_PRF</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PULSER_PRF</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SCOPE_TRACE1_MDAC</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SCOPE_TRACE1_MDAC</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* inspection run mode */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* inspection run mode */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc_S2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc_S2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nAuxClkIntCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nAuxClkIntCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* calibration mode */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* calibration mode */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PKT_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* calibration mode */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PKT_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* calibration mode */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PKT_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PKT_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PLC_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* &nbsp;*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PLC_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* &nbsp;*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PLC_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PLC_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPlcOfWho</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPlcOfWho</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ADC_MODE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ADC_MODE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* inspection stop mode */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* inspection stop mode */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc_S2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc_S2</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_MODE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_MODE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("MasterTCPIP -- ASCAN_MODE.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("MasterTCPIP -- ASCAN_MODE.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nEnableAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nEnableAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nEnableAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nEnableAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_CONFIG_MSG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_CONFIG_MSG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pShCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pShCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pShCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pShCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pShCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pShCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pShCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pShCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ChannelCfg.cClockOffset = pChnlCfg-&gt;cClockOffset;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ChannelCfg.cClockOffset = pChnlCfg-&gt;cClockOffset;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXSpan</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXSpan</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ALL_THOLDS</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ALL_THOLDS</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pThold</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pThold</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_MSG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_MSG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSiteDef</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSiteDef</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*SET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*SET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRecordWallData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nRecordWallData</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRecordWallData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nRecordWallData</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultLineSpeed</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultLineSpeed</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_fTimePerInch</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">1.0f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultLineSpeed</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">12.0f</span><span class="sf11b2">/</span><span class="sf3b2">6000.0f</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_fTimePerInch</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">1.0f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultLineSpeed</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">12.0f</span><span class="sf11b2">/</span><span class="sf3b2">6000.0f</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultRotateSpeed</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultRotateSpeed</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_fTimePerTurn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">1.0f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultRotateSpeed</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">6000.0f</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_fTimePerTurn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">1.0f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultRotateSpeed</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">6000.0f</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">n20ChnlPerHead</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">n20ChnlPerHead</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_b20ChnlPerHead</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_b20ChnlPerHead</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_b20ChnlPerHead</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_b20ChnlPerHead</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fMotionPulseLen</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fMotionPulseLen</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nMaxWallWindowSize</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nMaxWallWindowSize</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_DROP_TIME</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_DROP_TIME</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nWallDropTime</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nWallDropTime</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_WallDropTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">.</span><span class="sf3b2">f</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_WallDropTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">.</span><span class="sf3b2">f</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LINEAR_SCAN_0_DEGREE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LINEAR_SCAN_0_DEGREE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LINEAR_SCAN_37_DEGREE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LINEAR_SCAN_37_DEGREE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">49</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">49</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM_FOCUS</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM_FOCUS</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LO1LO1R_8_BEAM_12345678</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LO1LO1R_8_BEAM_12345678</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LO1LO1R_8_BEAM_56781234</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LO1LO1R_8_BEAM_56781234</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_16_BEAM</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_16_BEAM</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">48</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">48</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TWO_SCAN_LR_8_BEAM</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TWO_SCAN_LR_8_BEAM</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">16</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">16</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TWO_SCAN_LR_16_BEAM</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TWO_SCAN_LR_16_BEAM</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">32</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">32</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_8_BEAM_12345678</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_8_BEAM_12345678</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_8_BEAM_56781234</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_8_BEAM_56781234</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">8</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">8</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_800</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_800</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_080</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_080</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_12345678</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_12345678</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_56781234</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_56781234</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">WALL_25_BEAM_90_DEGREE_PROBE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">WALL_25_BEAM_90_DEGREE_PROBE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">25</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">25</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_NC_NX</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_NC_NX</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pNcNx</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">C_MSG_NC_NX</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_NcNx</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pNcNx</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">C_MSG_NC_NX</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_WALL_COEFS</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_WALL_COEFS</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWallCoef</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WALL_COEF</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWallCoef</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WALL_COEF</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWallCoef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWallSlope</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWallCoef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWallSlope</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWallCoef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWallSlope</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWallCoef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWallSlope</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWallCoef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">WallOffset</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWallCoef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">WallOffset</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWallCoef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">WallOffset</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWallCoef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">WallOffset</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWallCoef</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WALL_COEF</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWallCoef</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WALL_COEF</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0x69</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* sequence length */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0x69</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* sequence length */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">FIRING_SEQ</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">FIRING_SEQ</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">/</span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">/</span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">JOINT_NUMBER_MSG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">JOINT_NUMBER_MSG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pDWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pDWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_GAIN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_GAIN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TCG_FN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TCG_FN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_FCNT</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* receiver offset */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_FCNT</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* receiver offset */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ENET_STATS_MODE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ENET_STATS_MODE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNoMmiReplyCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNoMmiReplyCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0x63</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* TCG_TRIGGER, TCG_STEP */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0x63</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* TCG_TRIGGER, TCG_STEP */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RUN_CAL_JOINT</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RUN_CAL_JOINT</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LAST_JOINT_NUMBER</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LAST_JOINT_NUMBER</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pDWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pDWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pDWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pDWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextCalJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextRealJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">STORE_JOBREC_MSG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">STORE_JOBREC_MSG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bShowWallDiff</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pJobRec</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ShowWallDiff</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bShowWallDiff</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pJobRec</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ShowWallDiff</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_JobRec</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pJobRec</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">JOB_REC</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_JobRec</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pJobRec</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">JOB_REC</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">WALL_DROP_TIME</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">WALL_DROP_TIME</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LOAD_CONFIG_FILE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">LOAD_CONFIG_FILE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_AdiStatus</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_AdiStatus</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_AdiStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_AdiStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_REFRESH_RATE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_REFRESH_RATE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_BROADCAST</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_BROADCAST</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bBcastAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bBcastAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_X_SCALE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_X_SCALE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">600</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">900</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">600</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">900</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">900</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">900</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">900</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">900</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_PIPE_PRESENT</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_PIPE_PRESENT</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; ">&nbsp; &nbsp; </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TURN_OFF_MASTER</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TURN_OFF_MASTER</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ShutDownSystem();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ShutDownSystem();</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nShowWallBars</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nShowWallBars</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pMmiCmd</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Read End of Pipe.");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Read End of Pipe.");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Read Pipe Error.");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Read Pipe Error.");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*****************************</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*****************************</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Helper: &nbsp;send messages to Nios slave over TCP socket</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Helper: &nbsp;send messages to Nios slave over TCP socket</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">SendSlaveMsg</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">MMI_CMD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWArg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWArg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">buf</span><span class="sf11b2">[</span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">buf</span><span class="sf11b2">[</span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SCmdPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pCmd</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SCmdPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">buf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SCmdPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pCmd</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SCmdPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">buf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GateTrigger</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GateTrigger</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GatePolarity</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GatePolarity</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GateTofTrigger</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GateTofTrigger</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GateTofStop</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">GateTofStop</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">TcgTrigger</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">4</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">TcgTrigger</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">4</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">TcgStep</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">TcgStep</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">TCG_REC_MSG</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">TcgRec</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">4</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">TCG_REC_MSG</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">TcgRec</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">4</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nOldSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nOldSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">td</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//focusing time delays</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">td</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//focusing time delays</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_SEQ</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_BEAM</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_SEQ</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_BEAM</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_SEQ_REG_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_SEQ_REG_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nOldSlave</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nOldSlave</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">i</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">3</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//turn off Ascan send</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">3</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//turn off Ascan send</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nOldSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nOldSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWArg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MsgId</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_SEQ</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_SEQ</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_SEQ_REG_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_SEQ_REG_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">3</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//turn on ascan send</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">3</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//turn on ascan send</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("set ascan read seq.\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("set ascan read seq.\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_BEAM</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_READ_BEAM</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_SEQ_ONE_BEAM_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_SEQ_ONE_BEAM_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_GAIN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_GAIN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GAIN_DAC_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GAIN_DAC_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">420</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">10.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">420</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">10.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TCG_FN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TCG_FN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_TCG_FN_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_TCG_FN_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bSpare1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bSpare1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ChnlNum</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">TCG_REC_MSG</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">TCG_REC_MSG</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">TCG_REC_MSG</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">TCG_REC_MSG</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TCG_TRIGGER</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//TCG_Trigger, TCG_STEP</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TCG_TRIGGER</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//TCG_Trigger, TCG_STEP</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x000F</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x000F</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">TcgStep</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00F0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">4</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">TcgStep</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00F0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">4</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_TCG_STEP_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_TCG_STEP_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">TcgStep</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//step: 0, 1, 2, or 3</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">TcgStep</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//step: 0, 1, 2, or 3</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//sequence number to set</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//sequence number to set</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_RF_VIDEO</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_RF_VIDEO</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_DATA_MODE_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_DATA_MODE_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//Full Wave mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//Full Wave mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//RF mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//RF mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GatePolarity</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//negative</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GatePolarity</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//negative</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//Set Ascan to RF (non peak hold) or Full Wave (peak hold) mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//Set Ascan to RF (non peak hold) or Full Wave (peak hold) mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pCmd-&gt;DataHead.bMsgID = SET_ASCAN_PEAK_SEL_REG_CMD_ID;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pCmd-&gt;DataHead.bMsgID = SET_ASCAN_PEAK_SEL_REG_CMD_ID;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pCmd-&gt;wData[0] = (BYTE) (pWArg[0] &amp; 0x1);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pCmd-&gt;wData[0] = (BYTE) (pWArg[0] &amp; 0x1);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//rc = send( g_SocketSlave[nWhichSlave], (char *) pCmd, CmdPacketLength, 0 );</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//rc = send( g_SocketSlave[nWhichSlave], (char *) pCmd, CmdPacketLength, 0 );</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_PEAK_SEL_REG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_PEAK_SEL_REG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_PEAK_SEL_REG_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_PEAK_SEL_REG_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if (pCmd-&gt;wData[0] == 1) pCmd-&gt;wData[0]=2;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if (pCmd-&gt;wData[0] == 1) pCmd-&gt;wData[0]=2;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("SET_ASCAN_PEAK_SEL_REG pWArg = %d, sel =%d\n", pWArg[0], pCmd-&gt;wData[0]);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("SET_ASCAN_PEAK_SEL_REG pWArg = %d, sel =%d\n", pWArg[0], pCmd-&gt;wData[0]);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_POLT</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RECEIVER_POLT</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_DATA_MODE_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_DATA_MODE_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GatePolarity</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GatePolarity</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//Full Wave mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//Full Wave mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//RF mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateDetectMode</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//RF mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GatePolarity</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//negative</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GatePolarity</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//negative</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_DELAY</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_DELAY</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_DELAY_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_DELAY_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">gGate</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">gGate</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">6</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">50</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">6</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">50</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">GateOn</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">GateOn</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_TCG_FN_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_TCG_FN_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bSpare1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bSpare1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">TCG_REC_MSG</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">TCG_REC_MSG</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_RANGE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_RANGE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_RANGE_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_RANGE_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">gGate</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">gGate</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">50</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">50</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">GateOn</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgTrigger</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">GateOn</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_TCG_FN_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_TCG_FN_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bSpare1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bSpare1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">TCG_REC_MSG</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">TcgRec</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">TCG_REC_MSG</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_BLANK</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_BLANK</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_BLANK_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_BLANK_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">gGate</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">gGate</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">50</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">50</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_TRIGGER</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_TRIGGER</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_CONTROL_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_CONTROL_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GateTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GateTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">4</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//interface triggering</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">4</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//interface triggering</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//initial pulse triggering</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//initial pulse triggering</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_LEVEL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">GATES_LEVEL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_THRESHOLD_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_THRESHOLD_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">gGate</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">gGate</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TOF_TRIGGER</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TOF_TRIGGER</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_TOF_MODE_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_TOF_MODE_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GateTofTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GateTofTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTofTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTofTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTofStop</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTofStop</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TOF_STOPON</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">TOF_STOPON</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_TOF_MODE_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_GATE_TOF_MODE_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GateTofStop</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">GateTofStop</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">gGate</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTofTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTofTrigger</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTofStop</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">GateTofStop</span><span class="sf11b2">[</span><span class="sf3b2">gChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">value</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PULSER_PRF</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">PULSER_PRF</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_PULSE_RATE_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_PULSE_RATE_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf18b2">DWORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">80000000</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0000FFFF</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf18b2">DWORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">80000000</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0000FFFF</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf18b2">DWORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">80000000</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x003F0000</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">16</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf18b2">DWORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">80000000</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x003F0000</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">16</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_REGISTERS</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_REGISTERS</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">gChannel</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_NumberOfScans</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_RANGE_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_RANGE_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//::Sleep(2);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_DELAY_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_ASCAN_DELAY_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">250</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">25</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//add 25 to align gate with signal</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">250</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">25</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//add 25 to align gate with signal</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">50000</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">50000</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">50000</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">50000</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">data</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Set ascan registers");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Set ascan registers");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_MSG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_MSG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSiteDef</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSiteDef</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">CmdBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_SCAN_TYPE_CMD_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_SCAN_TYPE_CMD_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">pCmd</span><span style="color: #000000; background-color: #efcb05; ">-</span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; ">wData</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">1</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">1000.0f</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">sin</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">double</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">pSiteDef</span><span style="color: #000000; background-color: #efcb05; ">-</span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; ">nTranAngle</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">10.0f</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">3.14159f</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">180.0f</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0.6f</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">1.483f</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">pCmd</span><span style="color: #000000; background-color: #efcb05; ">-</span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; ">wData</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">1</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">(</span><span class="sf17b16">WORD</span><span class="sf17b16">)</span><span class="sf17b16">(</span><span class="sf17b16">1000.0f</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">sin</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">double</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">pSiteDef</span><span style="color: #000000; background-color: #efcb05; ">-</span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; ">nTranAngle</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">10.0f</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">3.14159f</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">180.0f</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0.6f</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">1.483f</span><span class="sf17b16">)</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nEncoderDivider</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nEncoderDivider</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">3</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">35</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//oblique 1 time delay step</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">3</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">35</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//oblique 1 time delay step</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">unsigned</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fOD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1000.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//OD</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">4</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">unsigned</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fOD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1000.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//OD</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">5</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">unsigned</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWaterPath</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1000.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//water path</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">5</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">unsigned</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWaterPath</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1000.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//water path</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">6</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">unsigned</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">0.6f</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1000.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//array pitch</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">6</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">unsigned</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">0.6f</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1000.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//array pitch</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM_FOCUS</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM_FOCUS</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ComputeTranFocusDelay</span><span class="sf11b2">(</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fFocusPointZf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWaterPath</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nTranAngle</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">10.0f</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">td</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ComputeTranFocusDelay</span><span class="sf11b2">(</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fFocusPointZf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWaterPath</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nTranAngle</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">10.0f</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">td</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">td</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">td</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//set ad9272 PGA gain</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//set ad9272 PGA gain</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CHANGE_9272_GAIN</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CHANGE_9272_GAIN</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nAd9272PgaGain</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nAd9272PgaGain</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_PIPE_PRESENT</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">SET_PIPE_PRESENT</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_INSPECT_ENABLE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bMsgID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SET_INSPECT_ENABLE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCmd</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wData</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pWArg</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nWhichSlave</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pCmd</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CmdPacketLength</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Master - Connection not established with Slave %d.\n\n", nWhichSlave+1);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("Master - Connection not established with Slave %d.\n\n", nWhichSlave+1);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">/</span><span class="sf17b16">***********************************************<wbr>***************************** 
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">* 
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">* tInstMsgProcess - receive and process slave data .. formerly called tcpServerWorkTask
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">* passes pointer to CInstMsgProcess class instance, ie which class instance is servicing instrument n
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">* 
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">* RETURNS: 0 or 1. 
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">*/</span><span class="sf17b16"> 
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">UINT</span><span class="sf17b16"> </span><span class="sf17b16">tInstMsgProcess</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16">void</span><span class="sf17b16"> </span><span class="sf17b16">*</span><span class="sf17b16">pCInstMsgProcess</span><span class="sf17b16">)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">{
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">CInstMsgProcess</span><span class="sf17b16"> </span><span class="sf17b16">*</span><span class="sf17b16">pInstMsgProcess</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16">CInstMsgProcess</span><span class="sf17b16"> </span><span class="sf17b16">*</span><span class="sf17b16">)</span><span class="sf17b16"> </span><span class="sf17b16">pCInstMsgProcess</span><span class="sf17b16">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// copy in ptr to the particular instance
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">int</span><span class="sf17b16"> </span><span class="sf17b16">tmpdbg</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">pInstMsgProcess</span><span class="sf17b16">-</span><span class="sf17b16">&gt;</span><span class="sf17b16">GetInstNumber</span><span class="sf17b16">(</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">int</span><span class="sf17b16"> </span><span class="sf17b16">*</span><span class="sf17b16">pSlave</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">&amp;</span><span class="sf17b16">tmpdbg</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">int</span><span class="sf17b16"> </span><span class="sf17b16">nSocket</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">pInstMsgProcess</span><span class="sf17b16">-</span><span class="sf17b16">&gt;</span><span class="sf17b16">GetSocket</span><span class="sf17b16">(</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>***************************** </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>***************************** </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* tcpServerWorkTask - receive and process slave data </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* tcpServerWorkTask - receive and process slave data </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* RETURNS: 0 or 1. </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* RETURNS: 0 or 1. </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// change task name from tcpServerWorkTask to tInstMsgProcess
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#if 0
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tcpServerWorkTask</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tcpServerWorkTask</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#endif
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">PEAK_DATA</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">PEAK_DATA</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf3b2">RawDataPacketLength</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf3b2">RawDataPacketLength</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf3b2">SlvData</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf3b2">SlvData</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* temporary */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* temporary */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">NextPacketNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">NextPacketNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">bGetSlaveRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">bGetSlaveRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSendCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSendCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nOldXloc</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nOldXloc</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SRawDataPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SRawDataPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SRawDataPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SRawDataPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf3b2">wClock_old</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf3b2">wClock_old</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">nSlave</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">*</span><span class="sf17b16">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">pSlave</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">nSlave</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">pInstMsgProcess</span><span class="sf17b16">-</span><span class="sf17b16">&gt;</span><span class="sf17b16">GetInstNumber</span><span class="sf17b16">(</span><span class="sf17b16">)</span><span class="sf17b16">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">//*(</span><span style="color: #000000; background-color: #efcb05; "> (int *) pSlave);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">RDP_number</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">RDP_number</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">SendCalBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">SendCalBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_ASCAN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pAscanMsg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_ASCAN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_ASCAN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pAscanMsg</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_ASCAN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pAscanMsg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pAscanMsg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">if</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">(</span><span class="sf17b16">g_SocketSlave</span><span class="sf17b16">[</span><span class="sf17b16">nSlave</span><span class="sf17b16">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">)</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">if</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">(</span><span class="sf17b16">nSocket</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">)</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// g_SocketSlave[nSlave] &gt;= 0)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">if</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">readn</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">g_SocketSlave</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">nSlave</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">char</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">recvBuf</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">RawDataPacketLength</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&lt;</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">//if</span><span style="color: #000000; background-color: #efcb05; "> (readn(g_SocketSlave[nSlave], (char *) recvBuf, RawDataPacketLength) &lt;= 0)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">if</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16">readn</span><span class="sf17b16">(</span><span class="sf17b16">nSocket</span><span class="sf17b16">,</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16">char</span><span class="sf17b16"> </span><span class="sf17b16">*</span><span class="sf17b16">)</span><span class="sf17b16"> </span><span class="sf17b16">recvBuf</span><span class="sf17b16">,</span><span class="sf17b16"> </span><span class="sf17b16">RawDataPacketLength</span><span class="sf17b16">)</span><span class="sf17b16"> </span><span class="sf17b16">&lt;</span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">0</span><span class="sf17b16">)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#if 0
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_SocketSlave</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">#endif
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">delete</span><span class="sf17b16"> </span><span class="sf17b16">pInstMsgProcess</span><span class="sf17b16">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// closes open sockets
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">g_pInstMsgProcess</span><span class="sf17b16">[</span><span class="sf17b16">nSlave</span><span class="sf17b16">]</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">NULL</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//g_nOldMotionBus = 0x4010;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//g_nOldMotionBus = 0x4010;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RAW_DATA_ID</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RAW_DATA_ID</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">NiosRawData_to_PeakData</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">NiosRawData_to_PeakData</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">.</span><span class="sf3b2">PeakData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ReadBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">.</span><span class="sf3b2">PeakData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ReadBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//inspect in time mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//inspect in time mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">128.0f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_fTimePerInch</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">128.0f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_fTimePerInch</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">2</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">128</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//halt for 2 seconds</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">2</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">128</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//halt for 2 seconds</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_NOT_PRESENT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_NOT_PRESENT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4010</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4010</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4011</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4011</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//inspection in motion mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//inspection in motion mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nOldXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nOldXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wLocation</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//0.495 for the encoder on the three array hand scanner</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wLocation</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//0.495 for the encoder on the three array hand scanner</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x04</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x04</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//g_nMotionBus = 0x4001 | ((pNiosRawData-&gt;DataHead.bDin &amp; 0x01) &lt;&lt; 4); &nbsp;//get the direction bit</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//g_nMotionBus = 0x4001 | ((pNiosRawData-&gt;DataHead.bDin &amp; 0x01) &lt;&lt; 4); &nbsp;//get the direction bit</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nOldXloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nOldXloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4001</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">14</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//going backward //get the home/away bit; &nbsp;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4001</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">14</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//going backward //get the home/away bit; &nbsp;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4011</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">14</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//going forward //get the home/away bit;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4011</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">14</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//going forward //get the home/away bit;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_NOT_PRESENT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_NOT_PRESENT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//g_nMotionBus = 0x4000 | ((pNiosRawData-&gt;DataHead.bDin &amp; 0x01) &lt;&lt; 4); &nbsp;//get the direction bit</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//g_nMotionBus = 0x4000 | ((pNiosRawData-&gt;DataHead.bDin &amp; 0x01) &lt;&lt; 4); &nbsp;//get the direction bit</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nOldXloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nOldXloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4000</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">14</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//going backward //get the home/away bit;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4000</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">14</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//going backward //get the home/away bit;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4010</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">14</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//going forward //get the home/away bit;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x4010</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">14</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//going forward //get the home/away bit;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wClock</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">wClock_old</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wClock</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">wClock_old</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">10</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wClock_old</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wClock</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wClock_old</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wClock</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pNiosRawData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">Inspection_Process_Control</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">Inspection_Process_Control</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_ID</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_ID</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">1024</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">1024</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pAscanMsg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ascan</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf3b2">DataHeadLength</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pAscanMsg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ascan</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf3b2">DataHeadLength</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">(</span><span class="sf3b2">pAscanMsg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MmiStat</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">DataHeadLength</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">(</span><span class="sf3b2">pAscanMsg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MmiStat</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">DataHeadLength</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the packet data to MMI */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the packet data to MMI */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//force to forgo the following inspection data process step</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//force to forgo the following inspection data process step</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">RdpStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">RdpStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//keep alive message</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//keep alive message</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//force to forgo the following inspection data process step</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//force to forgo the following inspection data process step</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">RdpStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">RdpStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">g_bConnected</span><span class="sf17b16">[</span><span class="sf17b16">nSlave</span><span class="sf17b16">+</span><span class="sf17b16">1</span><span class="sf17b16">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">1</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* This slave is alive since we received a message from it.*/</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">//g_bConnected[nSlave+1]</span><span style="color: #000000; background-color: #efcb05; "> = 1; &nbsp;/* This slave is alive since we received a message from it.*/</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">pInstMsgProcess</span><span class="sf17b16">-</span><span class="sf17b16">&gt;</span><span class="sf17b16">m_bConnected</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">1</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">RDP_number</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">RDP_number</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">.</span><span class="sf3b2">PeakData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ReadBuf</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">.</span><span class="sf3b2">PeakData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ReadBuf</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//inspection in time mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//inspection in time mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">.</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">.</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//if endcoder is only connected to the first array</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//if endcoder is only connected to the first array</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">.</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">.</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* If no pipe in the system, do nothing. */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* If no pipe in the system, do nothing. */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* If not inspection data, do nothing. */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* If not inspection data, do nothing. */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">BuildImageMap</span><span class="sf11b2">(</span><span class="sf11b2">&amp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">BuildImageMap</span><span class="sf11b2">(</span><span class="sf11b2">&amp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_bStartOfRevS1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSendCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSendCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf9b2">/</span><span class="sf9b2">*was == 1*/</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf9b2">/</span><span class="sf9b2">*was == 1*/</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetNextImageBuf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetNextImageBuf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CALIBRATION_JOINT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CALIBRATION_JOINT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ComputeEcc</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ComputeEcc</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the IData to MMI */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the IData to MMI */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span><span class="sf9b2">//return ERROR;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span><span class="sf9b2">//return ERROR;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendPipeLocation</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendPipeLocation</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSendCnt</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSendCnt</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send real time messages */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send real time messages */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//nSendCnt = 0;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//nSendCnt = 0;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("***** Real time message *****\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("***** Real time message *****\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">GetNextRealTimeImageBuf</span><span class="sf11b2">(</span><span class="sf11b2">&amp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">GetNextRealTimeImageBuf</span><span class="sf11b2">(</span><span class="sf11b2">&amp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("real time message 1\n\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("real time message 1\n\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("real time message 2\n\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("real time message 2\n\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">REAL_TIME_DATA</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">REAL_TIME_DATA</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CALIBRATION_JOINT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CALIBRATION_JOINT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//logMsg("wLinStatus = 0x%08X\n",pSendBuf-&gt;InspHdr.wLineStatus,0,0,0,0,<wbr>0);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//logMsg("wLinStatus = 0x%08X\n",pSendBuf-&gt;InspHdr.wLineStatus,0,0,0,0,<wbr>0);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("xloc = %d, EchoBit = 0x%08X\n",pSendBuf-&gt;InspHdr.xloc,pSendBuf-&gt;InspH<wbr>dr.EchoBit[0]);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("xloc = %d, EchoBit = 0x%08X\n",pSendBuf-&gt;InspHdr.xloc,pSendBuf-&gt;InspH<wbr>dr.EchoBit[0]);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("SegWallMin[25] = %d, SegMinChnl[25] = %d\n\n", pSendBuf-&gt;UtInsp.SegWallMin[25],pSendBuf-&gt;UtInsp<wbr>.SegMinChnl[25]);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("SegWallMin[25] = %d, SegMinChnl[25] = %d\n\n", pSendBuf-&gt;UtInsp.SegWallMin[25],pSendBuf-&gt;UtInsp<wbr>.SegMinChnl[25]);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the IData to MMI */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the IData to MMI */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if ( SendMmiMsg (g_nMmiSocket, pSendBuf) == FALSE )</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if ( SendMmiMsg (g_nMmiSocket, pSendBuf) == FALSE )</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//break;//return ERROR;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//break;//return ERROR;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0000</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0000</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//nSendCnt++;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//nSendCnt++;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSendCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSendCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendPipeLocation</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendPipeLocation</span><span class="sf11b2">(</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("******************************\n\n");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("******************************\n\n");</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ReadBuf</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">BuildCalMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">&amp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">BuildCalMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">&amp;</span><span class="sf3b2">SlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2">/</span><span class="sf10b2">1000</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2">/</span><span class="sf10b2">1000</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRecvCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendCalBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_CAL</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendCalBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_CAL</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the calibration data to MMI */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the calibration data to MMI */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendCalBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendCalBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* clear CalBuf */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* clear CalBuf */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_CAL</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_CAL</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ic</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ic</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">.</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">ic</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3FFF</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">.</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">ic</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3FFF</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>***************************** </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>***************************** </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; ">* tcpServerWorkTask_WD - receive and process slave data</span><span class="sf17b16"> 
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; ">* tcpServerWorkTask_WD - receive and process slave data</span><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">* This doesn't go anywhere
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* RETURNS: 0 or 1. </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* RETURNS: 0 or 1. </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tcpServerWorkTask_WD</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tcpServerWorkTask_WD</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf10b2">1024</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">[</span><span class="sf10b2">1024</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf8b2">readn</span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1024</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf8b2">readn</span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">recvBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1024</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">closesocket</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// a thread to send wall data to the Wall Bar Display GUI
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// gets wall bar data thru a pipe from NiosRawData_to_PeakData
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">// which was called by tcpServerWorkTask (thread)
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tSendWallDisplayMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tSendWallDisplayMsg</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">I_MSG_RUN</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">SendBuf</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">//</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;I_MSG_RUN SendBuf;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_WD</span><span class="sf11b2"> </span><span class="sf3b2">BufSend</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_WD</span><span class="sf11b2"> </span><span class="sf3b2">BufSend</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">I_MSG_RUN</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">pSendBuf</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">I_MSG_RUN</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&amp;</span><span style="color: #000000; background-color: #efcb05; ">SendBuf</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">//</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;I_MSG_RUN *pSendBuf = (I_MSG_RUN *) &amp;SendBuf;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pByte</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pByte</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">readBuf</span><span class="sf11b2">[</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">readBuf</span><span class="sf11b2">[</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunSendWallDisplayMsgThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">rc</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">readnpipe</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">g_hPipeWallDisplay</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">READ</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">char</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&amp;</span><span style="color: #000000; background-color: #efcb05; ">readBuf</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">1000</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">rc</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">readnpipe</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">g_hPipeWallDisplay</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">READ</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">char</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&amp;</span><span style="color: #000000; background-color: #efcb05; ">readBuf</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">1000</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// move 1000 bytes from pipe to readBuf
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">{</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">{</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// pipe read 1000 bytes
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">memcpy</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">void</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BufSend</span><span style="color: #000000; background-color: #efcb05; ">.</span><span style="color: #000000; background-color: #efcb05; ">Wall</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">void</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">readBuf</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">1000</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">memcpy</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">void</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BufSend</span><span style="color: #000000; background-color: #efcb05; ">.</span><span style="color: #000000; background-color: #efcb05; ">Wall</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">void</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">readBuf</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">1000</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// copy readbuf to BufSend
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">nNorWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fWall</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1000.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//nominal wall</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">nNorWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fWall</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1000.0f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//nominal wall</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pByte</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">10</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdWall</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//min wall threshold</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pByte</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">10</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdWall</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//min wall threshold</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pByte</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">10</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdWall</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//min wall threshold</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pByte</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">10</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdWall</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//min wall threshold</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//add IDs</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//add IDs</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.Mach = TRUSCAN_MACH_ID;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.Mach = TRUSCAN_MACH_ID;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.TruscanMsgId = TRUSCAN_MSG_ID;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.TruscanMsgId = TRUSCAN_MSG_ID;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">MsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMsgNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">MsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMsgNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MsgId = pSendBuf-&gt;MstrHdr.MsgId;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MsgId = pSendBuf-&gt;MstrHdr.MsgId;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.wLineStatus = pSendBuf-&gt;InspHdr.wLineStatus;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.wLineStatus = pSendBuf-&gt;InspHdr.wLineStatus;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.xloc = pSendBuf-&gt;InspHdr.xloc;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.xloc = pSendBuf-&gt;InspHdr.xloc;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.Period = pSendBuf-&gt;InspHdr.Period;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.Period = pSendBuf-&gt;InspHdr.Period;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.JointNumber = pSendBuf-&gt;InspHdr.JointNumber;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.JointNumber = pSendBuf-&gt;InspHdr.JointNumber;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MinWall = pSendBuf-&gt;UtInsp.MinWall;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MinWall = pSendBuf-&gt;UtInsp.MinWall;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MaxWall = pSendBuf-&gt;UtInsp.MaxWall;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MaxWall = pSendBuf-&gt;UtInsp.MaxWall;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MinWallClk = pSendBuf-&gt;UtInsp.MinWallClk;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MinWallClk = pSendBuf-&gt;UtInsp.MinWallClk;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MaxWallClk = pSendBuf-&gt;UtInsp.MaxWallClk;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//BufSend.MaxWallClk = pSendBuf-&gt;UtInsp.MaxWallClk;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">Num_of_Beams</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">25</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">Num_of_Beams</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">25</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">Num_of_Scans</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">20</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">Num_of_Scans</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">20</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nShowWallBars</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">BufSend</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nShowWallBars</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//rc = send( g_socketAGS, (char *) pSendBuf, sizeof(I_MSG_RUN), 0 );</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//rc = send( g_socketAGS, (char *) pSendBuf, sizeof(I_MSG_RUN), 0 );</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">rc</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">send</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_socketWallDisplay</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">char</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&amp;</span><span style="color: #000000; background-color: #efcb05; ">BufSend</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">sizeof</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">I_MSG_WD</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">rc</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">send</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">g_socketWallDisplay</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">char</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&amp;</span><span style="color: #000000; background-color: #efcb05; ">BufSend</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">sizeof</span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">I_MSG_WD</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">,</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// tcpip BufSend to Wall Bar display
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">close</span><span class="sf17b16">(</span><span class="sf17b16">g_socketWallDisplay</span><span class="sf17b16">)</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span class="sf17b16">_close</span><span class="sf17b16">(</span><span class="sf17b16">g_socketWallDisplay</span><span class="sf17b16">)</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">1000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">1000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_WD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_WD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">{</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">{</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// 1 whole msg sent
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// g_socketWallDisplay &gt;= 0
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">{</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">{</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// no socket to WallDisplay program yet
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">2000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">2000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// &nbsp;// pipe read 1000 bytes</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">;</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// something in pipe but not the full message
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">}</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">// while 1
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">********** Control inspection process *************************************</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">********** Control inspection process *************************************</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;Respond to pipe in and out</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;Respond to pipe in and out</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">Inspection_Process_Control</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">Inspection_Process_Control</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00000001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* look at the old pipe present status */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00000001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* look at the old pipe present status */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is not present */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is not present */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00000001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* look at the new pipe present status */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00000001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* look at the new pipe present status */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is not present */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is not present */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is present. */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is present. */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">PipeInProcess</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">PipeInProcess</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextWindow</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nNextWindow</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is present */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is present */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00000001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* look at the new status of the two stations */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00000001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* look at the new status of the two stations */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is present */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is present */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">PipeOutProcess</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">PipeOutProcess</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is present */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pipe is present */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*****************************</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*****************************</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Helper: &nbsp;send messages to MMI over TCP socket</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Helper: &nbsp;send messages to MMI over TCP socket</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">socketFD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">socketFD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">socketFD</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_MODE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RAW_FLAW_MODE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ASCAN_MODE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RAW_FLAW_MODE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* attach motion bus */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* attach motion bus */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">DWORD</span><span class="sf11b2"> </span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//add IDs</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//add IDs</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">Mach</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">TRUSCAN_MACH_ID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">Mach</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">TRUSCAN_MACH_ID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pSendBuf-&gt;UtInsp.TruscanMsgId = TRUSCAN_MSG_ID;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pSendBuf-&gt;UtInsp.TruscanMsgId = TRUSCAN_MSG_ID;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMsgNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMsgNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">send</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">rc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMsgNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">BuildCalMsg</span><span class="sf11b2">(</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">BuildCalMsg</span><span class="sf11b2">(</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nS</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nC</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl index */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nS</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nC</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl index */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* channel type (wall/long/tran/oblq) */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* channel type (wall/long/tran/oblq) */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* temp wall value*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* temp wall value*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_CAL</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pCalBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_CAL</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pCalBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">CalBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_STATUS_NOT_EU</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_STATUS_NOT_EU</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* look at all chnls from slave */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* look at all chnls from slave */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nS</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nS</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nC</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nC</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pCalBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Shoe</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* look at all 10 chnls from slave */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* look at all 10 chnls from slave */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* CalpMsg */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* CalpMsg */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=Get */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=Get */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">semM</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">semM</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">semM</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">semM</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">semM</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">semM</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">nSetGet</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">nSetGet</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">cClockOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">cClockOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">cClockOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">cClockOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pChnlCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*********</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*********</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Convert phased array Nios raw data packet SRawDataPacket to PEAK_DATA</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Convert phased array Nios raw data packet SRawDataPacket to PEAK_DATA</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">* Called from the thread tcpServerWorkTask. Uses pipes to "send" Wall bar data to another thread
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NiosRawData_to_PeakData</span><span class="sf11b2">(</span><span class="sf3b2">SRawDataPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pInspData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">PEAK_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pPeakData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NiosRawData_to_PeakData</span><span class="sf11b2">(</span><span class="sf3b2">SRawDataPacket</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pInspData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">PEAK_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pPeakData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">k</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* generic looper */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">k</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* generic looper */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* receiver sequence enable status. &nbsp;1=enabled, 0=no */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* receiver sequence enable status. &nbsp;1=enabled, 0=no */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* hold ID amplitude for current A-scan */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* hold ID amplitude for current A-scan */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* hold OD amplitude for current A-scan */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* hold OD amplitude for current A-scan */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* hold maximum ID flaw amplitude for current 12 degree segment */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* hold maximum ID flaw amplitude for current 12 degree segment */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* hold maximum OD flaw amplitude for current 12 degree segment */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* hold maximum OD flaw amplitude for current 12 degree segment */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* hold wall reading for current A-scan */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* hold wall reading for current A-scan */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* hold minimum wall reading for current 12 degree segment */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* hold minimum wall reading for current 12 degree segment */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* hold maximum wall reading for current 12 degree segment */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* hold maximum wall reading for current 12 degree segment */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">WORD</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">Old_WallMin</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTR<wbr>UMENT</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* hold minimum wall reading for previous 12 degree segment */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">WORD</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">Old_WallMin</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMEN<wbr>T</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* hold minimum wall reading for previous 12 degree segment */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">WORD</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">Old_WallMax</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTR<wbr>UMENT</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* hold maximum wall reading for previous 12 degree segment */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">WORD</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">Old_WallMax</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMEN<wbr>T</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* hold maximum wall reading for previous 12 degree segment */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">1.0f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">1.0f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RDP_number</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RDP_number</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">fWallSlope</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">.</span><span class="sf3b2">fWallSlope</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">fWallSlope</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">.</span><span class="sf3b2">fWallSlope</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nWallOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">.</span><span class="sf3b2">WallOffset</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nWallOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_WallCoef</span><span class="sf11b2">.</span><span class="sf3b2">WallOffset</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nClock</span><span class="sf11b2">=</span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wClock</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nClock</span><span class="sf11b2">=</span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wClock</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">short</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">nOldClock</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">short</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">nOldClock</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf3b2">nOldTick</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf3b2">nOldTick</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">bTopPipe</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">bTopPipe</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nDispCh</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nDispCh</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">WallDisplay</span><span class="sf11b2">[</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">WallDisplay</span><span class="sf11b2">[</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nScan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nScan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nTotalScan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nTotalScan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nDivider</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">25</span><span class="sf11b2">*</span><span class="sf10b2">40</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nDivider</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPulserPRF</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">25</span><span class="sf11b2">*</span><span class="sf10b2">40</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nDivider</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nDivider</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nDivider</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nDivider</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RdpStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RdpStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pPeakData-&gt;RDP_number = nSlave;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//pPeakData-&gt;RDP_number = nSlave;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wLocation</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//0.495 for the encoder on the three array hand scanner</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wLocation</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//0.495 for the encoder on the three array hand scanner</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ShoeAngle</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wClock</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">nPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">ShoeAngle</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wClock</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">nPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">bNewData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">bNewData</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nDispCh</span><span class="sf11b2">/</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT<wbr></span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nDispCh</span><span class="sf11b2">%</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nDispCh</span><span class="sf11b2">/</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT<wbr></span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nDispCh</span><span class="sf11b2">%</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdLong</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdLong</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdLong</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdLong</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Long</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Long</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Long</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Long</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdTran</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdTran</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdTran</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdTran</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Tran</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Tran</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Tran</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Tran</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq1</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq1</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq1</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq1</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq1</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq1</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq1</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq1</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq2</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq2</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq2</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq2</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq2</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq2</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq2</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq2</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq3</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq3</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq3</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdOblq3</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq3</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq3</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq3</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Oblq3</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdLamin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdLamin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdLamin</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdLamin</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Lamin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Lamin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Lamin</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Lamin</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_NcNx</span><span class="sf11b2">.</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CAL_MODE</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0xFFFF</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0xFFFF</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">EchoBit</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0000</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">EchoBit</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0000</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">128</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* loop through A-scans */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">128</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* loop through A-scans */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">k</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">k</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">k</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">k</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">k</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">k</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">k</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//reset</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">k</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//reset</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf9b2">//nSeq = ( g_SequenceLength + pInspData-&gt;DataHead.bSeq - (127 - j) % g_SequenceLength ) % g_SequenceLength; &nbsp;//actual sequence if bSeq is the last one</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf9b2">//nSeq = ( g_SequenceLength + pInspData-&gt;DataHead.bSeq - (127 - j) % g_SequenceLength ) % g_SequenceLength; &nbsp;//actual sequence if bSeq is the last one</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bSeq</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//actual sequence if bSeq is the first one</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bSeq</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//actual sequence if bSeq is the first one</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_800</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_800</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">7</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">7</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">continue</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">continue</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_080</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">LONG_24_BEAM_080</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">8</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">15</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">8</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">15</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">continue</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">continue</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x80</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* get receiver sequence bit */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x80</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* get receiver sequence bit */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RawData</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">bAmp2</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RawData</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">bAmp2</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RawData</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">bAmp3</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RawData</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">bAmp3</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RawData</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">wTof4</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">2.904f</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//raw data in 12.5ns</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">RawData</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">wTof4</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">2.904f</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//raw data in 12.5ns</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">fWallSlope</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nWallOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">fWallSlope</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nWallOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nClock</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nOldClock</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nClock</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nOldClock</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nClock</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nClock</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nOldClock</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">127</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">nPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nClock</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nClock</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nOldClock</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">127</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">nPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nClock</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nOldClock</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nClock</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">127</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">nPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nClock</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nPeriod</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nOldClock</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nClock</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">127</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">nPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">nTick</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">nOldTick</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">nTick</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">nOldTick</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">CSCAN_REVOLUTION</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">CSCAN_REVOLUTION</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wLocation</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wLocation</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">bDin</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//SendRawFlawToMMI();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//SendRawFlawToMMI();</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bSendRawFlawToMMI</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bSendRawFlawToMMI</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nOldTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nOldTick</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_25_BEAM_90_DEGREE_PROBE</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_25_BEAM_90_DEGREE_PROBE</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTotalScan</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">nDivider</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTotalScan</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">nDivider</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nScan</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">25</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nScan</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">25</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScan</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScan</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nShowWallBars</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nShowWallBars</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">WALL_HIGH_LIMIT</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">WALL_HIGH_LIMIT</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">nWD</span><span class="sf11b2">%</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">nWD</span><span class="sf11b2">%</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">nWD</span><span class="sf11b2">%</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">nWD</span><span class="sf11b2">%</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">nWD</span><span class="sf11b2">%</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">nWD</span><span class="sf11b2">%</span><span class="sf10b2">500</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">499</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">499</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTotalScan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTotalScan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_socketWallDisplay</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeWallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">WRITE</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">WallDisplay</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_hPipeWallDisplay</span><span class="sf11b2">[</span><span class="sf3b2">WRITE</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">WallDisplay</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">24</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTotalScan</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTotalScan</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">NC_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">FlawID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">NC_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">FlawID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">NX_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">bFirstAscan</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wLocation</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">NX_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">bFirstAscan</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pInspData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">DataHead</span><span class="sf11b2">.</span><span class="sf3b2">wLocation</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">bFirstAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* We have done with the first A-scan of this pipe */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">bFirstAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* We have done with the first A-scan of this pipe */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0xFFFF</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0xFFFF</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Old_WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Old_WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Old_WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Old_WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">EchoBit</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf10b2">0x0001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">EchoBit</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf10b2">0x0001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* for wall channel, it is for lamination */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* for wall channel, it is for lamination */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">TholdWallThds</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">EchoBit</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf10b2">0x0001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pPeakData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">EchoBit</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf10b2">0x0001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Old_WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Old_WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Old_WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Old_WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nOldClock</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClock</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nOldClock</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClock</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*******</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*******</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* NC process</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* NC process</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* perform the n ouf of m algorithm.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* perform the n ouf of m algorithm.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* If there are NC_ABOVE A-scans that are above the threshold</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* If there are NC_ABOVE A-scans that are above the threshold</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* out of NC_TOTAL consecutive A-scans, we get a flaw. </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* out of NC_TOTAL consecutive A-scans, we get a flaw. </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; AmpID[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp; // hold ID amplitude for current A-scan </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; AmpID[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp; // hold ID amplitude for current A-scan </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; AmpOD[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp; // hold OD amplitude for current A-scan </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; AmpOD[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp; // hold OD amplitude for current A-scan </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; FlawID[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp;// hold maximum ID flaw amplitude for current 12 degree segment </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; FlawID[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp;// hold maximum ID flaw amplitude for current 12 degree segment </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; FlawOD[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp;// hold maximum OD flaw amplitude for current 12 degree segment </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; FlawOD[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp;// hold maximum OD flaw amplitude for current 12 degree segment </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NC_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">AmpID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">AmpOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">FlawID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">FlawOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NC_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">AmpID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">AmpOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">FlawID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">FlawOD</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">m_AmpID</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMEN<wbr>T</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">NC_TOTAL</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* NC_TOTAL consecutive ID amplitudes */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">m_AmpID</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">N<wbr>C_TOTAL</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* NC_TOTAL consecutive ID amplitudes */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">m_AmpOD</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMEN<wbr>T</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">NC_TOTAL</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* NC_TOTAL consecutive OD amplitudes */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">BYTE</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">m_AmpOD</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">N<wbr>C_TOTAL</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* NC_TOTAL consecutive OD amplitudes */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* channel looper */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* channel looper */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* generic looper */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* generic looper */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">maxID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">maxOD</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf3b2">maxID</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">maxOD</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nc_cnt_id</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nc_cnt_od</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nc_cnt_id</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nc_cnt_od</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* current A-scan is the last one of NC_TOTAL consecutive A-scans */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* current A-scan is the last one of NC_TOTAL consecutive A-scans */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x80</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x80</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">NC_TOTAL</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">NC_TOTAL</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">NC_TOTAL</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">NC_TOTAL</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">16</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">16</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">iChann<wbr>elCnt</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nTick</span><span class="sf11b2">%</span><span class="sf10b2">180</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">iChann<wbr>elCnt</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nTick</span><span class="sf11b2">%</span><span class="sf10b2">180</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">iChann<wbr>elCnt</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nTick</span><span class="sf11b2">%</span><span class="sf10b2">180</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">iChann<wbr>elCnt</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nTick</span><span class="sf11b2">%</span><span class="sf10b2">180</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">iChann<wbr>elCnt</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nTick</span><span class="sf11b2">%</span><span class="sf10b2">180</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">iChann<wbr>elCnt</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nTick</span><span class="sf11b2">%</span><span class="sf10b2">180</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">iChann<wbr>elCnt</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nTick</span><span class="sf11b2">%</span><span class="sf10b2">180</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">iChann<wbr>elCnt</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nTick</span><span class="sf11b2">%</span><span class="sf10b2">180</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* perform CHANNEL_INFO.nc_for_id (od) out of NC_TOTAL algorithm for each channel */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* perform CHANNEL_INFO.nc_for_id (od) out of NC_TOTAL algorithm for each channel */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nc_cnt_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nc_cnt_id</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nc_cnt_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nc_cnt_od</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">maxID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">maxID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">maxOD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">maxOD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x80</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x80</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* for wall channel, do NC for lamination */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* for wall channel, do NC for lamination */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NC_TOTAL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NC_TOTAL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nc_cnt_id</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">id_thold</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nc_cnt_id</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">maxID</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">maxID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">maxID</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">maxID</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nc_cnt_od</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">od_thold</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nc_cnt_od</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">maxOD</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">maxOD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">maxOD</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">maxOD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* discard the earliest A-scan and shift the remaining NC_TOTAL-1 A-scans one A-scan toward left */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* discard the earliest A-scan and shift the remaining NC_TOTAL-1 A-scans one A-scan toward left */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Next time we call this function, we already have NC_TOTAL-1 previous A-scans */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Next time we call this function, we already have NC_TOTAL-1 previous A-scans */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NC_TOTAL</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NC_TOTAL</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">m_AmpID</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">m_AmpOD</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if n out of m, do peak hold */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if n out of m, do peak hold */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nc_cnt_id</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">maxID</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nc_cnt_id</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_id</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">maxID</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">maxID</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">FlawID</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">maxID</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nc_cnt_od</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">maxOD</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nc_cnt_od</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nc_for_od</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">maxOD</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">maxOD</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">FlawOD</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">maxOD</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*******</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*******</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* NX process</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* NX process</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Moving average of wall readings</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Moving average of wall readings</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; Wall[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp; // hold wall reading for current A-scan</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; Wall[MAX_CHANNEL_PER_INSTRUMENT]; &nbsp; // hold wall reading for current A-scan</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; WallMin[MAX_CHANNEL_PER_INSTRUMENT]; // hold minimum averaged wall reading for current 12 degree segment </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; WallMin[MAX_CHANNEL_PER_INSTRUMENT]; // hold minimum averaged wall reading for current 12 degree segment </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; WallMax[MAX_CHANNEL_PER_INSTRUMENT]; // hold maximum averaged wall reading for current 12 degree segment</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; WallMax[MAX_CHANNEL_PER_INSTRUMENT]; // hold maximum averaged wall reading for current 12 degree segment</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; ascan_delta_t; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // time spanned by one A-scan in seconds. &nbsp;Should be 1.0/PRF</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp; ascan_delta_t; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // time spanned by one A-scan in seconds. &nbsp;Should be 1.0/PRF</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NX_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">Wall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">WallMin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">WallMax</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstAscan</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">NX_Process</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">Wall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">WallMin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">WallMax</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">CHANNEL_INFO</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstAscan</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSeq</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">WORD</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">m_Wall</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMENT<wbr></span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">NX_TOTAL</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* NX_TOTAL consecutive wall readings */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">WORD</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">m_Wall</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">NX<wbr>_TOTAL</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* NX_TOTAL consecutive wall readings */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">WORD</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">Wall_Buf</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUME<wbr>NT</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">WALL_BUF_SIZE</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* &nbsp;consecutive wall readings for finding maximum wall */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">WORD</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">Wall_Buf</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf17b16">]</span><span class="sf17b16">[<wbr></span><span class="sf17b16">WALL_BUF_SIZE</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* &nbsp;consecutive wall readings for finding maximum wall */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* channel looper */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* channel looper */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* generic looper */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* generic looper */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">ascan_cnt</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUM<wbr>ENT</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* number of valid wall readings since the last invalid wall readings */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">int</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">ascan_cnt</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf17b16">]<wbr></span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* number of valid wall readings since the last invalid wall readings */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">avg_wall</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* average of NX_TOTAL &nbsp;consecutive wall readings including current wall readings */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">avg_wall</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* average of NX_TOTAL &nbsp;consecutive wall readings including current wall readings */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">sum_wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">sum_wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">float</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">invalid_wall_t</span><span class="sf17b16">[</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_IN<wbr>STRUMENT</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* time in seconds a loss-of-coupling (invalid wall reading) event has lasted */</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">static</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">float</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">invalid_wall_t</span><span class="sf17b16">[</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">]</span><span class="sf17b16">[</span><span class="sf17b16">MAX_CHANNEL_PER_INSTRU<wbr>MENT</span><span class="sf17b16">]</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">/</span><span style="color: #000000; background-color: #efcb05; ">* time in seconds a loss-of-coupling (invalid wall reading) event has lasted */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">min_max_wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">min_max_wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* average of NX_TOTAL &nbsp;consecutive wall readings including current wall readings */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* average of NX_TOTAL &nbsp;consecutive wall readings including current wall readings */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">iWallChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">iWallChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nScanType</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nScanType</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTickOld</span><span class="sf11b2">=</span><span class="sf10b2">100</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTickOld</span><span class="sf11b2">=</span><span class="sf10b2">100</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">fWallInch</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">fWallInch</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* If this is the first A-scan of current pipe, do the following initialization */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* If this is the first A-scan of current pipe, do the following initialization */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">bFirstCall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">bFirstCall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">bFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">bFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">j</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">j</span><span class="sf17b16">&lt;</span><span class="sf17b16">NUM_OF_SLAVES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">j</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">for</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">j</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">j</span><span class="sf17b16">&lt;</span><span class="sf17b16">MAX_SHOES</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">j</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">+</span><span style="color: #000000; background-color: #efcb05; ">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ascan_cnt</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ascan_cnt</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0.0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0.0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0xFFFF</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0xFFFF</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NX_TOTAL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NX_TOTAL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* compute average of CHANNEL_INFO.nx_for_wall wall readings for each channel */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* compute average of CHANNEL_INFO.nx_for_wall wall readings for each channel */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">sum_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0.0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">sum_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0.0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ascan_delta_t</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSeq</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_SequenceLength</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//if (RcvrSequence[nChannel])</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//if (RcvrSequence[nChannel])</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x80</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x80</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">channel_type</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPhasedArrayScanType</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM_FOCUS</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_8_BEAM_FOCUS</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScanType</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScanType</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_16_BEAM</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">THREE_SCAN_LRW_16_BEAM</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScanType</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScanType</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScanType</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nScanType</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* If current A-scan is a valid wall reading, do the average and window shifting */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* If current A-scan is a valid wall reading, do the average and window shifting */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">WALL_LOW_LIMIT</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">WALL_HIGH_LIMIT</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* valid wall reading */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">RcvrSequence</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x01</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">WALL_LOW_LIMIT</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">WALL_HIGH_LIMIT</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* valid wall reading */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if ( (Wall[nChannel] &gt; WALL_LOW_LIMIT) &amp;&amp; (Wall[nChannel] &lt; WALL_HIGH_LIMIT) ) &nbsp;/* valid wall reading */</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if ( (Wall[nChannel] &gt; WALL_LOW_LIMIT) &amp;&amp; (Wall[nChannel] &lt; WALL_HIGH_LIMIT) ) &nbsp;/* valid wall reading */</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if ( (RcvrSequence[nChannel] &amp; 0x01) == 0 ) &nbsp;/* no wall alarm, valid wall reading */</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if ( (RcvrSequence[nChannel] &amp; 0x01) == 0 ) &nbsp;/* no wall alarm, valid wall reading */</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* current A-scan is the last one of nx_for_wall consecutive A-scans */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* current A-scan is the last one of nx_for_wall consecutive A-scans */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* current A-scan is the last one of WALL_BUF_SIZE consecutive A-scans */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* current A-scan is the last one of WALL_BUF_SIZE consecutive A-scans */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* moving average */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* moving average */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sum_wall</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sum_wall</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* discard the earliest A-scan and shift the remaining NX_TOTAL-1 A-scans one A-scan toward left */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* discard the earliest A-scan and shift the remaining NX_TOTAL-1 A-scans one A-scan toward left */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Next time we call this function, we already have NX_TOTAL-1 previous A-scans */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Next time we call this function, we already have NX_TOTAL-1 previous A-scans */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">m_Wall</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* minimum of g_nMinMaxWallLen consecutive walls for maximum wall traces */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* minimum of g_nMinMaxWallLen consecutive walls for maximum wall traces */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">min_max_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">min_max_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">g_nMaxWallWindowSize</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">min_max_wall</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">-</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">min_max_wall</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">-</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">min_max_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">-</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">min_max_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">-</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">min_max_wall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">min_max_wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">min_max_wall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">min_max_wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* discard the earliest A-scan and shift the remaining WALL_BUF_SIZE-1 A-scans one A-scan toward left */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* discard the earliest A-scan and shift the remaining WALL_BUF_SIZE-1 A-scans one A-scan toward left */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Next time we call this function, we already have WALL_BUF_SIZE-1 previous A-scans */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Next time we call this function, we already have WALL_BUF_SIZE-1 previous A-scans */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">WALL_BUF_SIZE</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall_Buf</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ascan_cnt</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">ascan_cnt</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ascan_cnt</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">ascan_cnt</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ascan_cnt</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ascan_cnt</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">avg_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sum_wall</span><span class="sf11b2">/</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">avg_wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sum_wall</span><span class="sf11b2">/</span><span class="sf3b2">ChannelInfo</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nx_for_wall</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">avg_wall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">avg_wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">avg_wall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">avg_wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if (WallMax[nChannel] &lt; avg_wall) WallMax[nChannel] = avg_wall; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if (WallMax[nChannel] &lt; avg_wall) WallMax[nChannel] = avg_wall; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">%</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">%</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0.0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0.0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* invalid wall reading */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* invalid wall reading */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">g_WallDropTime</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* let the chart show zero wall reading */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">g_WallDropTime</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* let the chart show zero wall reading */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMin</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">WallMax</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0.0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">invalid_wall_t</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0.0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">%</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">%</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nPipeStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">%</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">%</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTick</span><span class="sf11b2">/</span><span class="sf10b2">6</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTick</span><span class="sf11b2">/</span><span class="sf10b2">6</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTick</span><span class="sf11b2">/</span><span class="sf10b2">6</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTickOld</span><span class="sf11b2">/</span><span class="sf10b2">6</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTick</span><span class="sf11b2">/</span><span class="sf10b2">6</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTickOld</span><span class="sf11b2">/</span><span class="sf10b2">6</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXlocRevStart</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1.012658f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nXlocRevStart</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">1.012658f</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ic</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ic</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ic</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">ic</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">ic</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTickOld</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTickOld</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nTick</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">4</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">4</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">6</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">6</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">7</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">7</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">iWallChannel</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">NUM_MAX_ASCAN</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">NUM_MAX_ASCAN</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">+</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">WallAscan</span><span class="sf11b2">[</span><span class="sf3b2">g_n<wbr>WallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">iWallC<wbr>hannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">+</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">WallAscan</span><span class="sf11b2">[</span><span class="sf3b2">g_n<wbr>WallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Wall</span><span class="sf11b2">[</span><span class="sf3b2">iWallC<wbr>hannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">+</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nNumAscan</span><span class="sf11b2">[</span><span class="sf3b2">iWa<wbr>llChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">+</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nNumAscan</span><span class="sf11b2">[</span><span class="sf3b2">iWa<wbr>llChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">+</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXlocRevStart</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">0.31f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">+</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXlocRevStart</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">0.31f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">fWallInch</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2">/</span><span class="sf3b2">1000.0f</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">fWallInch</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">AverageWall</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2">/</span><span class="sf3b2">1000.0f</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">+</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">fCrossArea</span><span class="sf11b2">[</span><span class="sf3b2">iW<wbr>allChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">fWallInch</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fOD</span><span class="sf11b2">-</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fWall</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* compute cross-sectional area t*(OD-t) in squared inch */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2">+</span><span class="sf3b2">nDeltaRev</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">fCrossArea</span><span class="sf11b2">[</span><span class="sf3b2">iW<wbr>allChannel</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">fWallInch</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fOD</span><span class="sf11b2">-</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">.</span><span class="sf3b2">fWall</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* compute cross-sectional area t*(OD-t) in squared inch */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nNumRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nNumRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">iChannelCnt</span><span class="sf11b2">/</span><span class="sf3b2">nScanType</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0001</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0001</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0001</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">nStopXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXlocRevStart</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">0.31f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">nStopXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nXlocRevStart</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nDeltaRev</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">0.31f</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">0.5f</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">// if (nChannel == 2)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">// if (nChannel == 2)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=Get */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=Get */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDef</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf3b2">bFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">bFirstCall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">bFirstCall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">bFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">bFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">nSetGet</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2">(</span><span class="sf3b2">nSetGet</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDef</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">**********************************************B<wbr>uild Image Buf*********************************************<wbr>******/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">**********************************************B<wbr>uild Image Buf*********************************************<wbr>******/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf8b2">GetNextImageBuf</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf8b2">GetNextImageBuf</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">pIBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">pIBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nBufcnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nBufcnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nBufout</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nBufout</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufout</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufout</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufcnt</span><span class="sf11b2">-</span><span class="sf11b2">-</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufcnt</span><span class="sf11b2">-</span><span class="sf11b2">-</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">pIBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">pIBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Caller should then reset this array in the image buf structure */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Caller should then reset this array in the image buf structure */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*******************</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>*******************</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;Added Feb 7, 2003 by Y.Guo</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;Added Feb 7, 2003 by Y.Guo</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;Every time receive a motion pulse, check all ImageBuf.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;Every time receive a motion pulse, check all ImageBuf.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;If there is any flaw, send it to MMI immediately.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;If there is any flaw, send it to MMI immediately.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">GetNextRealTimeImageBuf</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">pIBuf</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf8b2">GetNextRealTimeImageBuf</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">*</span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">pIBuf</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nCurBufIndex</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nCurBufIndex</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nFirstCall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nFirstCall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf8b2">GetMinXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf8b2">GetMinXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">5</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pIBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pIBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCurBufIndex</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCurBufIndex</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nCurBufIndex</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nCurBufIndex</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("nBufout = %d, bBufin = %d, nRealbuf = %d\n", nBufout,nBufin,nCurBufIndex);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("nBufout = %d, bBufin = %d, nRealbuf = %d\n", nBufout,nBufin,nCurBufIndex);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pIBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nCurBufIndex</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pIBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nCurBufIndex</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2">-</span><span class="sf11b2">-</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nRemainBufCnt</span><span class="sf11b2">-</span><span class="sf11b2">-</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nFirstCall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">,</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">,</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//MaxXOffset = 0;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//MaxXOffset = 0;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_OUTPUT_DELAY</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_OUTPUT_DELAY</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufcnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_OUTPUT_DELAY</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufcnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_OUTPUT_DELAY</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">nStation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">nStation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0x3f</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">N_SEG</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0x3f</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">N_SEG</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_INCLUDED</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_INCLUDED</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">EraseImageBuf</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pIB</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">EraseImageBuf</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pIB</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* reset/erase a 1 inch segment in the image buf ARRAY*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* reset/erase a 1 inch segment in the image buf ARRAY*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pIB</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pIB</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0x3f</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">N_SEG</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0x3f</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">N_SEG</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_INCLUDED</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_INCLUDED</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">pIB</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">BackwardEraseImageBuf</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBufStart</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">BackwardEraseImageBuf</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBufStart</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nBufStart</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nBufStart</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">nStation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">nStation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0x3f</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">N_SEG</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0x3f</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">N_SEG</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_INCLUDED</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_INCLUDED</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf10b2">4</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">*</span><span class="sf10b2">20</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x3fff</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">BuildImageMap</span><span class="sf11b2">(</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">si</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bStartOfRev</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">BuildImageMap</span><span class="sf11b2">(</span><span class="sf3b2">UDP_SLAVE_DATA</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSlvData</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">si</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">BOOL</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">bStartOfRev</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Build or Update the image buffer */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Build or Update the image buffer */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pass in peak data from 1 slave and the slave (shoe) number */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* pass in peak data from 1 slave and the slave (shoe) number */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if pipe moved one x increment, buid new map. &nbsp;Location</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if pipe moved one x increment, buid new map. &nbsp;Location</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; is relative to Center line of 1st head (ut12)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; is relative to Center line of 1st head (ut12)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; if Flush is true, done with pipe. &nbsp;Ship MMI what we have */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; if Flush is true, done with pipe. &nbsp;Ship MMI what we have */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">x</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">dx</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* x in inches,*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">x</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">dx</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* x in inches,*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* y in radial segments up to N_SEG */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* y in radial segments up to N_SEG */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* y expressed as a clock [0-11] */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* y expressed as a clock [0-11] */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl index and start chnl offset */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl index and start chnl offset */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl index, channel type (wall/long/tran/oblq) */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl index, channel type (wall/long/tran/oblq) */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Non zero when pipe moves 1 inch */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Non zero when pipe moves 1 inch */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSegDiv</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Segment divider. &nbsp;180/N_SEG; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSegDiv</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Segment divider. &nbsp;180/N_SEG; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* temp wall value*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* temp wall value*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wLineStatus</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* local */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wLineStatus</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* local */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* local copy of center of shoe loc */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* local copy of center of shoe loc */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStart</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStop</span><span class="sf11b2">=</span><span class="sf10b2">10</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nS</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nC</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStart</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStop</span><span class="sf11b2">=</span><span class="sf10b2">10</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nS</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nC</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nChnlStart</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf3b2">si</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nChnlStart</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf3b2">si</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nChnlStop</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStart</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">si</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nChnlStop</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStart</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">si</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">si</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">si</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">cClockOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultClockOffset</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">15</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">cClockOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultClockOffset</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">15</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">*</span><span class="sf3b2">bStartOfRev</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">*</span><span class="sf3b2">bStartOfRev</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//2;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//2;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">bStartOfRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">bStartOfRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cibase</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//10*si; &nbsp; &nbsp; &nbsp; &nbsp;/* starting chnl number for each shoe */</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">cibase</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//10*si; &nbsp; &nbsp; &nbsp; &nbsp;/* starting chnl number for each shoe */</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSegDiv</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2">/</span><span class="sf3b2">N_SEG</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* FOR 30 SEGS, 6 tick increments */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSegDiv</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2">/</span><span class="sf3b2">N_SEG</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* FOR 30 SEGS, 6 tick increments */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// At sheldon, found all flaws 3 inches short of true location. 5/02/02</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// At sheldon, found all flaws 3 inches short of true location. 5/02/02</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Default shoe offset defined in global.h</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Default shoe offset defined in global.h</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2">;</span><span class="sf9b2">/</span><span class="sf9b2">* + nShoeXOffset;*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2">;</span><span class="sf9b2">/</span><span class="sf9b2">* + nShoeXOffset;*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">)</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufcnt</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* image buffer management */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufcnt</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* image buffer management */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//1;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nMaxX</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//1;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//2 &nbsp;/* send real time messages only */</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nReturn</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//2 &nbsp;/* send real time messages only */</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">nPreviousX</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nPreviousX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index from 0-IMAGE_BUF_DIM - 1 */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index from 0-IMAGE_BUF_DIM - 1 */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nBufin</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nBufin</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0010</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0010</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* going backward */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0010</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0010</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* going backward */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nBufin</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nBufin</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nBufin</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nBufin</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nBufin</span><span class="sf11b2">-</span><span class="sf3b2">nBufout</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2">+</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nBufin</span><span class="sf11b2">-</span><span class="sf3b2">nBufout</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2">+</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nBufout</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">nBufout</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">BackwardEraseImageBuf</span><span class="sf11b2">(</span><span class="sf3b2">nBufin</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">BackwardEraseImageBuf</span><span class="sf11b2">(</span><span class="sf3b2">nBufin</span><span class="sf11b2">+</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0010</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0010</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* going backward */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0010</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0x0010</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* going backward */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf8b2">BoxIsEnabled</span><span class="sf11b2">(</span><span class="sf3b2">si</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf8b2">BoxIsEnabled</span><span class="sf11b2">(</span><span class="sf3b2">si</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* build image for wall, long, tran and obq flaws based on xdcr type */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* build image for wall, long, tran and obq flaws based on xdcr type */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">(</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">(</span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* update structure in 1 inch bands */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* update structure in 1 inch bands */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStart</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStop</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl loop */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStart</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChnlStop</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl loop */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nS</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nS</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nC</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nC</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* &nbsp;Chnl indx fixes x loc */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* &nbsp;Chnl indx fixes x loc */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x4000</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Away */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x4000</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Away */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">dx</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* true index in image buf &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">dx</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* true index in image buf &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Toward */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Toward */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">dx</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* true index in image buf &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">dx</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">g_nMaxXSpan</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* true index in image buf &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//inspection in motion mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//inspection in motion mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">x</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">dx</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* true index in image buf &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">x</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nBufin</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">dx</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* true index in image buf &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//inspection in time mode</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//inspection in time mode</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">x</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* true index in image buf &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">x</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nBufout</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">IMAGE_BUF_DIM</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* true index in image buf &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">y</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">ShoeAngle</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">y</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">ShoeAngle</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2">*</span><span class="sf10b2">3</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* 1 count = 0.2 hour */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cWOffset</span><span class="sf11b2">*</span><span class="sf10b2">3</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* 1 count = 0.2 hour */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">cClockOffset</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">90</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">cClockOffset</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">90</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">y</span><span class="sf11b2">&lt;</span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">y</span><span class="sf11b2">&lt;</span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">/</span><span class="sf10b2">15</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* 0-11 clks */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">/</span><span class="sf10b2">15</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* 0-11 clks */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">y</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSegDiv</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">y</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSegDiv</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nS</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">nC</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wLineStatus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wLineStatus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">dx</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">xloc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">dx</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ImageBuf[x].InspHdr.JointLength = nXloc;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//ImageBuf[x].InspHdr.JointLength = nXloc;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//logMsg("x = %d\n\n", x,0,0,0,0,0);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//logMsg("x = %d\n\n", x,0,0,0,0,0);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//logMsg("xloc = %d\n\n", ImageBuf[x].InspHdr.xloc,0,0,0,0,0);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//logMsg("xloc = %d\n\n", ImageBuf[x].InspHdr.xloc,0,0,0,0,0);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2">[</span><span class="sf3b2">si</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0x0001</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2">[</span><span class="sf3b2">si</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">0x0001</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if inspecting, update data values, else go to next channel */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if inspecting, update data values, else go to next channel */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ct</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* min wall operations */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* min wall operations */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegMinChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegMinChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWallChnl</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWallChnl</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWallClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MinWallClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//all flaw, do wall min only</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//all flaw, do wall min only</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">40</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ci</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">40</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">pWord</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* max wall operations */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* max wall operations */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">wall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">short</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegMaxChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegMaxChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxWallChnl</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxWallChnl</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxWallClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxWallClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamLFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamLFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamLFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamLFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamLChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamLChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLamLFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLamLFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLamLFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLamLFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LamLChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LamLChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LamLClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LamLClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 0</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 0</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamAFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamAFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamAFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamAFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamAChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLamAChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLamAFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLamAFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLamAFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLamAFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LamAChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LamAChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LamAClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LamAClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 0</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 0</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* use oblique3 to do lamination */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* use oblique3 to do lamination */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3idChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3idChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ3idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ3idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ3idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ3idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q3idChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q3idChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q3idClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q3idClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3odChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ3odChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ3odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ3odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ3odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ3odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q3odChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q3odChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q3odClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q3odClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLidFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLidFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLidFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLidFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLidChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLidChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLidFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLidFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLidFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLidFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LidChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LidChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LidClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LidClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLodFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLodFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLodFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLodFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLodChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegLodChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLodFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLodFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLodFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxLodFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LodChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LodChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LodClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">LodClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTidFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTidFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTidFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTidFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTidChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTidChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxTidFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxTidFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxTidFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxTidFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">TidChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">TidChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">TidClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">TidClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTodFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTodFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTodFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTodFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTodChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegTodChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxTodFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxTodFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxTodFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxTodFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">TodChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">TodChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">TodClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">TodClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1idChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1idChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ1idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ1idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ1idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ1idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q1idChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q1idChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q1idClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q1idClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1odChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ1odChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ1odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ1odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ1odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ1odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q1odChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q1odChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q1odClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q1odClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* ID gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2idFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2idChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2idChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ2idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ2idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ2idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ2idFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q2idChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q2idChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q2idClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q2idClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Store Max sig amp for each chnl and its clock loc */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* dbl start loc for byte array */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index next gate */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* OD gate signal */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">flaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pSlvData</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">PeakData</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">[</span><span class="sf3b2">ci</span><span class="sf11b2">-</span><span class="sf3b2">nChnlStart</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2odFlaw</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2odChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegQ2odChnl</span><span class="sf11b2">[</span><span class="sf3b2">y</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ2odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ2odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ2odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxQ2odFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q2odChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q2odChnl</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">cibase</span><span class="sf11b2">+</span><span class="sf3b2">ci</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q2odClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">Q2odClk</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nClk</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">FlawDetected</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* non zero flaw value means flaw exists */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxAmp</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">flaw</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">ImageBuf</span><span class="sf11b2">[</span><span class="sf3b2">x</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">GateMaxClk</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">y</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* convert to clock */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type &nbsp;*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl type &nbsp;*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl loop */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* chnl loop */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nReturn</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* update structure in 1 inch bands */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* update structure in 1 inch bands */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* have not moved 1 inch since last image */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* have not moved 1 inch since last image */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Build or Update the image buffer */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Build or Update the image buffer */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ComputeEcc</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pRun</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pThold</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ComputeEcc</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pRun</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">C_MSG_ALL_THOLD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pThold</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Must wait till msg is ready to be sent before calculating ecc */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Must wait till msg is ready to be sent before calculating ecc */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMaxEcc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nTmpEcc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMaxEcc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nTmpEcc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSumEcc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSumMinWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSumWall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSumEcc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSumMinWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSumWall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nCntEcc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nCntMinWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nCntWall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nCntEcc</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nCntMinWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nCntWall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nEccLimit</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Do not process Ecc &gt; 0.5* nominal wall */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nEccLimit</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Do not process Ecc &gt; 0.5* nominal wall */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nWallSum</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nEcc</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* the sum of the wall readings opposite to each other */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nWallSum</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nEcc</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* the sum of the wall readings opposite to each other */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nWallNorm</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pThold</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWall</span><span class="sf11b2">*</span><span class="sf10b2">1000.0</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nWallNorm</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pThold</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWall</span><span class="sf11b2">*</span><span class="sf10b2">1000.0</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf3b2">SegMin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SegMax</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">short</span><span class="sf11b2"> </span><span class="sf3b2">SegMin</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SegMax</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Invalid min walls have value 0x3f3f. &nbsp;Invalid Max walls have value 0 */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* Invalid min walls have value 0x3f3f. &nbsp;Invalid Max walls have value 0 */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nEccLimit</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pThold</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWall</span><span class="sf11b2">*</span><span class="sf10b2">1000.0</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">2.0</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nEccLimit</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pThold</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">fWall</span><span class="sf11b2">*</span><span class="sf10b2">1000.0</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">2.0</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumMinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumMinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCntEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nCntMinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nCntWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCntEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nCntMinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nCntWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">N_SEG</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">N_SEG</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* loop thru all segments */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* loop thru all segments */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">j</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">(</span><span class="sf3b2">N_SEG</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">N_SEG</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index of wall 180 degrees from i index */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">j</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">(</span><span class="sf3b2">N_SEG</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">N_SEG</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* index of wall 180 degrees from i index */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTmpEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">abs</span><span class="sf11b2">(</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTmpEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">abs</span><span class="sf11b2">(</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWallSum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nWallSum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTmpEcc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">nEccLimit</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWallSum</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTmpEcc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">nEccLimit</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nWallSum</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTmpEcc</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nWallSum</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">nWallSum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nTmpEcc</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">100</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">nWallSum</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">nWallSum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nMaxEcc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">nEcc</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nMaxEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nEcc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">nMaxEcc</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">nEcc</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nMaxEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nEcc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSumEcc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nEcc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSumEcc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nEcc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCntEcc</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCntEcc</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SegMin</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SegMin</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SegMax</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SegMax</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SegMin</span><span class="sf11b2">&gt;</span><span class="sf3b2">nWallNorm</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SegMin</span><span class="sf11b2">&lt;</span><span class="sf3b2">nWallNorm</span><span class="sf11b2">*</span><span class="sf10b2">3</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SegMax</span><span class="sf11b2">&gt;</span><span class="sf3b2">nWallNorm</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SegMax</span><span class="sf11b2">&lt;</span><span class="sf3b2">nWallNorm</span><span class="sf11b2">*</span><span class="sf10b2">3</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SegMin</span><span class="sf11b2">&gt;</span><span class="sf3b2">nWallNorm</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SegMin</span><span class="sf11b2">&lt;</span><span class="sf3b2">nWallNorm</span><span class="sf11b2">*</span><span class="sf10b2">3</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SegMax</span><span class="sf11b2">&gt;</span><span class="sf3b2">nWallNorm</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">SegMax</span><span class="sf11b2">&lt;</span><span class="sf3b2">nWallNorm</span><span class="sf11b2">*</span><span class="sf10b2">3</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSumMinWall</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSumMinWall</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCntMinWall</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCntMinWall</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSumWall</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSumWall</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMin</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">SegWallMax</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCntWall</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* max and min add toward average */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nCntWall</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* max and min add toward average */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* loop thru all segments */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* loop thru all segments */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nCntEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nCntEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nCntEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nCntEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nCntMinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nCntMinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nCntMinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nCntMinWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nCntWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nCntWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nCntWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">nCntWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">AvgEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumEcc</span><span class="sf11b2">/</span><span class="sf3b2">nCntEcc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">AvgEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumEcc</span><span class="sf11b2">/</span><span class="sf3b2">nCntEcc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">AvgMinWall</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumMinWall</span><span class="sf11b2">/</span><span class="sf3b2">nCntMinWall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">AvgMinWall</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumMinWall</span><span class="sf11b2">/</span><span class="sf3b2">nCntMinWall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">AvgWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumWall</span><span class="sf11b2">/</span><span class="sf3b2">nCntWall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">AvgWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nSumWall</span><span class="sf11b2">/</span><span class="sf3b2">nCntWall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMaxEcc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRun</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">UtInsp</span><span class="sf11b2">.</span><span class="sf3b2">MaxEcc</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nMaxEcc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1000</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1000</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MaxXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">MaxXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMinXOffset</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMinXOffset</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">CHANNEL_CONFIG2</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">MinXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">MinXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1000</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetChannelCfg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">MAX_CHANNEL_PER_INSTRUMENT</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Type</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_WALL</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_LONG</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_TRAN</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_OBQ3</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf3b2">IS_NOTHING</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">MinXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2"> </span><span class="sf11b2">&lt;</span><span class="sf11b2"> </span><span class="sf3b2">MinXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MinXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">MinXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ChannelCfg</span><span class="sf11b2">.</span><span class="sf3b2">Ch</span><span class="sf11b2">[</span><span class="sf3b2">nSlave</span><span class="sf11b2">]</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">cXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">MinXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">MinXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>***********************************</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>***********************************</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Compute the distance between the leftmost transducer and the rightmost transducer</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Compute the distance between the leftmost transducer and the rightmost transducer</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXSpan</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXSpan</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXSpan</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXSpan</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxXSpan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf8b2">GetMinXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nMaxXSpan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetMaxXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf8b2">GetMinXOffset</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXSpan</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nMaxXSpan</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>********************</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>********************</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Use static variable to hold current inspection mode:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* Use static variable to hold current inspection mode:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;RUN_MODE, CAL_MODE, PKT_MODE, NOP_MODE</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* &nbsp;RUN_MODE, CAL_MODE, PKT_MODE, NOP_MODE</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nSetGet</span><span class="sf9b2">/</span><span class="sf9b2">* 0=SET, 1=GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NOP_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTimeMotion</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=motion, 1=time */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nTimeMotion</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* 0=motion, 1=time */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSetGet</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nSetGet</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* SET */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMode</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMode</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTimeMotion</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nTimeMotion</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">nMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">nMode</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nTimeMotion</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">*</span><span class="sf3b2">nMotionTime</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nTimeMotion</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">default</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>***********************</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***********************************************<wbr>***********************</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* FlushImageBufArray</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* FlushImageBufArray</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* After the pipe exits, send all remaining Idata in the image buffer to MMI</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">* After the pipe exits, send all remaining Idata in the image buffer to MMI</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">FlushImageBufArray</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">FlushImageBufArray</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nInspectMode</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nFlushCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nFlushCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nMotionTime</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetInspectMode_M</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">* GET */</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nInspectMode</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">nMotionTime</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nInspectMode</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetNextImageBuf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">GetNextImageBuf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ComputeEcc</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">ComputeEcc</span><span class="sf11b2">(</span><span class="sf3b2">pSendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_AllTholds</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">if</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">(</span><span style="color: #000000; background-color: #efcb05; ">pSendBuf</span><span style="color: #000000; background-color: #efcb05; ">-</span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; ">InspHdr</span><span style="color: #000000; background-color: #efcb05; ">.</span><span style="color: #000000; background-color: #efcb05; ">xloc</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&gt;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">0</span><span style="color: #000000; background-color: #efcb05; ">)</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">//</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp; &nbsp; &nbsp;if (pSendBuf-&gt;InspHdr.xloc &gt; 0);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the IData to MMI */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the IData to MMI */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pSendBuf</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* reset image buf once sent */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* reset image buf once sent */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* EraseImageBuf(pSendBuf); */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* EraseImageBuf(pSendBuf); */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nFlushCnt</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nFlushCnt</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* logMsg ("nFlushCnt = %d\n\n", nFlushCnt, 0,0,0,0,0); */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* logMsg ("nFlushCnt = %d\n\n", nFlushCnt, 0,0,0,0,0); */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">PipeInProcess</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">PipeInProcess</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitImageBufArray</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitRawWallBuf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">InitRawWallBuf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">PipeOutProcess</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">PipeOutProcess</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf3b2">ULONG</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nPipeOutTimer</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* For raw wall system, the time interval between two consecutive pipe out </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf3b2">ULONG</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">nPipeOutTimer</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* For raw wall system, the time interval between two consecutive pipe out </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;messages has to be greater than some number (20 seconds) */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;messages has to be greater than some number (20 seconds) */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">!</span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">!</span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">FlushImageBufArray</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">FlushImageBufArray</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">nStation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">nStation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_INCLUDED</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">WALL_INCLUDED</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CALIBRATION_JOINT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CALIBRATION_JOINT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">EchoBit</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">MAX_SHOES</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0000FFFF</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">WORD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x0000FFFF</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00004000</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* away */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nOldMotionBus</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf10b2">0x00004000</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* away */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf3b2">g_nXscale</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send a dummy IData to MMI so it can erase the traces automatically */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send a dummy IData to MMI so it can erase the traces automatically */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bAnyShoeDown</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRecordWallData</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRecordWallData</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">!</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2">!</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SendPipeLocation</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nStation</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDefault</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SendPipeLocation</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nStation</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pSiteDefault</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">EraseImageBuf</span><span class="sf11b2">(</span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">EraseImageBuf</span><span class="sf11b2">(</span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RUN_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">REAL_TIME_DATA</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">wLineStatus</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">PIPE_PRESENT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">INSPECT_ENABLE_TRUSCOPE</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">REAL_TIME_DATA</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">Period</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nPeriod</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">VelocityDt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nVelocityDt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bRunCalJoint</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CALIBRATION_JOINT</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">CALIBRATION_JOINT</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">status</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nMotionBus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">NextJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">nStation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">nStation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointNumber</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1JointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nWhichWindow</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nStation1Window</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDefault</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">.</span><span class="sf3b2">InspHdr</span><span class="sf11b2">.</span><span class="sf3b2">JointLength</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nXloc</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf3b2">pSiteDefault</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the IData to MMI */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* send the IData to MMI */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">SendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RUN</span><span class="sf11b2"> </span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RAW_FLAW</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RAW_FLAW</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">I_MSG_RAW_FLAW</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">I_MSG_RAW_FLAW</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBuffer</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//send buffer</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nBuffer</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRawFlawBuffer</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">%</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//send buffer</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pByte</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">nBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">pByte</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf18b2">BYTE</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">nBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Amp</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RAW_FLAW_MODE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">MsgId</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">RAW_FLAW_MODE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">IdataStat</span><span class="sf11b2">.</span><span class="sf3b2">wLast</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">nBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">IdataStat</span><span class="sf11b2">.</span><span class="sf3b2">wLast</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">nBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nXloc</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">IdataStat</span><span class="sf11b2">.</span><span class="sf3b2">nDup</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">nBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nMotionBus</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">IdataStat</span><span class="sf11b2">.</span><span class="sf3b2">nDup</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_RawFlaw</span><span class="sf11b2">[</span><span class="sf3b2">nBuffer</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nMotionBus</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">IdataStat</span><span class="sf11b2">.</span><span class="sf3b2">nRcv</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">IdataStat</span><span class="sf11b2">.</span><span class="sf3b2">nRcv</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">MstrHdr</span><span class="sf11b2">.</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Buf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">pByte</span><span class="sf11b2">[</span><span class="sf10b2">1152</span><span class="sf11b2">*</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1152</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">pRawFlaw</span><span class="sf11b2">-</span><span class="sf11b2">&gt;</span><span class="sf3b2">Buf</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">pByte</span><span class="sf11b2">[</span><span class="sf10b2">1152</span><span class="sf11b2">*</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">1152</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendMmiMsg</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nMmiSocket</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SendBuf</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tSendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tSendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunSendRawFlawToMMIThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bSendRawFlawToMMI</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bSendRawFlawToMMI</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SendRawFlawToMMI</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bSendRawFlawToMMI</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bSendRawFlawToMMI</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">100</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">100</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">InitRawWallBuf</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">InitRawWallBuf</span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memset</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nNumRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nNumRev</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">fCrossArea</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">fCrossArea</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallRevCnt</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">*</span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_nWallAscanCnt</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tWriteWallDataToFile</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf18b2">UINT</span><span class="sf11b2"> </span><span class="sf8b2">tWriteWallDataToFile</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">dummy</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">sFileName</span><span class="sf11b2">[</span><span class="sf10b2">200</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">sFileName</span><span class="sf11b2">[</span><span class="sf10b2">200</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">[</span><span class="sf10b2">200</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">[</span><span class="sf10b2">200</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">fDX</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">fDX</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">CONFIG_REC</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">pConfigRec</span><span style="color: #000000; background-color: #efcb05; ">;</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">//</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;CONFIG_REC &nbsp;*pConfigRec;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">fNumAscan</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">fNumAscan</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nTryCnt</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">nTryCnt</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">SITE_SPECIFIC_DEFAULTS</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_nRunWriteWallDataToFileThread</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">(</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_JobRec</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">JOB_REC</span><span class="sf11b2">)</span><span class="sf11b2">-</span><span class="sf10b2">8</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">(</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_JobRec</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">JOB_REC</span><span class="sf11b2">)</span><span class="sf11b2">-</span><span class="sf10b2">8</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">fWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_JobRec</span><span class="sf11b2">.</span><span class="sf3b2">Wall</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">fWall</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_JobRec</span><span class="sf11b2">.</span><span class="sf3b2">Wall</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">fOD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_JobRec</span><span class="sf11b2">.</span><span class="sf3b2">OD</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">fOD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_JobRec</span><span class="sf11b2">.</span><span class="sf3b2">OD</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nJointNum</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">SetGetSiteDefaults</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf9b2">/</span><span class="sf9b2">*GET*/</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">SiteDefault</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">nHomeXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//two counts per inch</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">nHomeXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//two counts per inch</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">nAwayXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset2</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//two counts per inch</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">nAwayXOffset</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SiteDefault</span><span class="sf11b2">.</span><span class="sf3b2">nDefaultXOffset2</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//two counts per inch</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2">(</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">Version</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"TruscanWD200501"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2">(</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">Version</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"TruscanWD200501"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//0.5f;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fMotionPulseLen</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_fMotionPulseLen</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">//0.5f;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fChnlOffset</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fChnlOffset</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fChnlOffset</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.16f</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fChnlOffset</span><span class="sf11b2">[</span><span class="sf10b2">1</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.16f</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fChnlOffset</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.62f</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fChnlOffset</span><span class="sf11b2">[</span><span class="sf10b2">2</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.62f</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fChnlOffset</span><span class="sf11b2">[</span><span class="sf10b2">3</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.78f</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">fChnlOffset</span><span class="sf11b2">[</span><span class="sf10b2">3</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">0.78f</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* nomalize the cross-sectional area */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* nomalize the cross-sectional area */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nNumRev</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">.</span><span class="sf3b2">nNumRev</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_WALL_CHANNEL</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">fNumAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nNumAscan</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">fNumAscan</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">nNumAscan</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fNumAscan</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">fCrossArea</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fNumAscan</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">fCrossArea</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf3b2">0.0f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">&amp;</span><span class="sf11b2">&amp;</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">NUM_MAX_REVOL</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">g_RawWall</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; ">.</span><span style="color: #000000; background-color: #efcb05; ">fCrossArea</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">j</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">3.141593</span><span class="sf17b16">/</span><span class="sf17b16">fNumAscan</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; ">g_RawWall</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">i</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; ">.</span><span style="color: #000000; background-color: #efcb05; ">fCrossArea</span><span style="color: #000000; background-color: #efcb05; ">[</span><span style="color: #000000; background-color: #efcb05; ">j</span><span style="color: #000000; background-color: #efcb05; ">]</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">3.141592f</span><span class="sf17b16">/</span><span class="sf17b16">fNumAscan</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* make a copy so next joint can use g_RawWallHead and g_RawWall buffers */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* make a copy so next joint can use g_RawWallHead and g_RawWall buffers */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">RAW_WALL_HEAD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_RawWallHead</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">RAW_WALL_HEAD</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallCopy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">memcpy</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallCopy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWall</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">g_RawWall</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//* InitRawWallBuf(); */</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//* InitRawWallBuf(); */</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// write wall data to file</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// write wall data to file</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">strlen</span><span class="sf11b2">(</span><span class="sf3b2">g_JobRec</span><span class="sf11b2">.</span><span class="sf3b2">WO</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">strlen</span><span class="sf11b2">(</span><span class="sf3b2">g_JobRec</span><span class="sf11b2">.</span><span class="sf3b2">WO</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileName</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"C:/PhasedArray/WallData/%s/%s_%d"</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">WO</span><span class="sf11b2">,</span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">.</span><span class="sf3b2">Jo<wbr>bRec</span><span class="sf11b2">.</span><span class="sf3b2">WO</span><span class="sf11b2">,</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileName</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"C:/PhasedArray/WallData/%s/%s_%d"</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">.</span><span class="sf3b2">JobRec</span><span class="sf11b2">.</span><span class="sf3b2">WO</span><span class="sf11b2">,</span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">.</span><span class="sf3b2">Jo<wbr>bRec</span><span class="sf11b2">.</span><span class="sf3b2">WO</span><span class="sf11b2">,</span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileName</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"C:/PhasedArray/WallData/Unknown_%d"</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileName</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"C:/PhasedArray/WallData/Unknown_%d"</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">g_nJointNum</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if the file name already exists, change it */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if the file name already exists, change it */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"%s.dat"</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">sFileName</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"%s.dat"</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">sFileName</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">fDX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_open</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">_O_RDONLY</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">fDX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_open</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">_O_RDONLY</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* exist */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* exist */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("open ERROR = %d; &nbsp;fDX = %d\n", ERROR, fDX);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("open ERROR = %d; &nbsp;fDX = %d\n", ERROR, fDX);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"%s_%d.dat"</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">sFileName</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">sprintf</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf12b2">"%s_%d.dat"</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">sFileName</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_close</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_close</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("open else ERROR = %d; &nbsp;fDX = %d\n", ERROR, fDX);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("open else ERROR = %d; &nbsp;fDX = %d\n", ERROR, fDX);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">while</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">fDX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_open</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">_O_RDWR</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">_O_CREAT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">_O_BINARY</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">fDX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_open</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sFileTemp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">_O_RDWR</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">_O_CREAT</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">_O_BINARY</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//fDX = open (sFileTemp, O_CREAT | O_RDWR, 0666);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//fDX = open (sFileTemp, O_CREAT | O_RDWR, 0666);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if we fail to open the file, abort this operation */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* if we fail to open the file, abort this operation */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("TcuSlave - creat failed to open %s &nbsp;on attempt %d\n", sFileTemp, i);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("TcuSlave - creat failed to open %s &nbsp;on attempt %d\n", sFileTemp, i);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">&gt;</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">sleep_a_while</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">sleep_a_while</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">500</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* wait a second and try again */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">500</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">* wait a second and try again */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("creat ERROR = %d; &nbsp;fDX = %d\n", ERROR, fDX);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf("creat ERROR = %d; &nbsp;fDX = %d\n", ERROR, fDX);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">sizeof</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("Write wall data to file %s......", sFileName);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//printf ("Write wall data to file %s......", sFileName);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallCopy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">.</span><span class="sf3b2">nNumRev</span><span class="sf11b2">*</span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">WALL_REVOLUTION<wbr></span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">i</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">_write</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallCopy</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">g_RawWallHeadCopy</span><span class="sf11b2">.</span><span class="sf3b2">nNumRev</span><span class="sf11b2">*</span><span class="sf7b2">sizeof</span><span class="sf11b2">(</span><span class="sf3b2">WALL_REVOLUTION<wbr></span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_close</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">_close</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">fDX</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">g_bWriteWallDataFile</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if g_bWriteWallDataFile==TRUE</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if g_bWriteWallDataFile==TRUE</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">sleep_a_while</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">sleep_a_while</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">500</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">:</span><span class="sf11b2">:</span><span class="sf8b2">Sleep</span><span class="sf11b2">(</span><span class="sf10b2">500</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindWhichSlave</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">sum</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">sum</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sum</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sum</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">sum</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">sum</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlave</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nSlave</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindSlaveChannel</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">sum</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">sum</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf10b2">10</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sum</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">sum</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">sum</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">sum</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sum</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nSlaveCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nChannel</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">sum</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nSlaveCh</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nArray</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nArrayCh</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">FindDisplayChannel</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nArray</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nArrayCh</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nArrayCh</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">nArrayCh</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">nArray</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">for</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">i</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">&lt;</span><span class="sf3b2">nArray</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf3b2">i</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">nDispCh</span><span class="sf11b2"> </span><span class="sf11b2">+</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">g_ArrayScanNum</span><span class="sf11b2">[</span><span class="sf3b2">i</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">nDispCh</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#if 1</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ComputeTranFocusDelay</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">thickness</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">zf_value</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">water_path</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">incident_angle</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">td</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ComputeTranFocusDelay</span><span class="sf11b2">(</span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">thickness</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">zf_value</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">water_path</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">float</span><span class="sf11b2"> </span><span class="sf3b2">incident_angle</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">WORD</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf3b2">td</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">const</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">PI</span><span class="sf11b2">=</span><span class="sf10b2">3.1415926535897932</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">const</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">PI</span><span class="sf11b2">=</span><span class="sf10b2">3.1415926535897932</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">v21</span><span class="sf11b2">,</span><span class="sf3b2">h</span><span class="sf11b2">,</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf3b2">zf</span><span class="sf11b2">,</span><span class="sf3b2">u0</span><span class="sf11b2">,</span><span class="sf3b2">bet8</span><span class="sf11b2">,</span><span class="sf3b2">tilt</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">v21</span><span class="sf11b2">,</span><span class="sf3b2">h</span><span class="sf11b2">,</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf3b2">zf</span><span class="sf11b2">,</span><span class="sf3b2">u0</span><span class="sf11b2">,</span><span class="sf3b2">bet8</span><span class="sf11b2">,</span><span class="sf3b2">tilt</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">rr</span><span class="sf11b2">,</span><span class="sf3b2">r0</span><span class="sf11b2">,</span><span class="sf3b2">r1</span><span class="sf11b2">,</span><span class="sf3b2">u</span><span class="sf11b2">,</span><span class="sf3b2">lhs</span><span class="sf11b2">,</span><span class="sf3b2">tmax</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">rr</span><span class="sf11b2">,</span><span class="sf3b2">r0</span><span class="sf11b2">,</span><span class="sf3b2">r1</span><span class="sf11b2">,</span><span class="sf3b2">u</span><span class="sf11b2">,</span><span class="sf3b2">lhs</span><span class="sf11b2">,</span><span class="sf3b2">tmax</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf3b2">alp</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf3b2">bet</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf3b2">time</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf3b2">alp</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf3b2">bet</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">,</span><span class="sf3b2">time</span><span class="sf11b2">[</span><span class="sf10b2">16</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">v1</span><span class="sf11b2">=</span><span class="sf10b2">1.483</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">v1</span><span class="sf11b2">=</span><span class="sf10b2">1.483</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">j</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; switch (m_wave_value)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; switch (m_wave_value)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; {</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; case 0:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; case 0:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v2=3.2;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v2=3.2;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; wword="T-wave";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; wword="T-wave";</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; case 1:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; case 1:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v2=5.9;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v2=5.9;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; wword="L-wave";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; wword="L-wave";</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; }</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">v2</span><span class="sf11b2">=</span><span class="sf10b2">3.2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//Simply set velocity for shear wave</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">double</span><span class="sf11b2"> </span><span class="sf3b2">v2</span><span class="sf11b2">=</span><span class="sf10b2">3.2</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//Simply set velocity for shear wave</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">v21</span><span class="sf11b2">=</span><span class="sf3b2">v2</span><span class="sf11b2">/</span><span class="sf3b2">v1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">v21</span><span class="sf11b2">=</span><span class="sf3b2">v2</span><span class="sf11b2">/</span><span class="sf3b2">v1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">float</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">p</span><span class="sf17b16">=</span><span class="sf17b16">0.6</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">// center to center distance between two neighboring elements</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">float</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">p</span><span class="sf17b16"> </span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">0.6f</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">// center to center distance between two neighboring elements</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">h</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">thickness</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">25.4f</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//pipe thickness converted to mm from inches</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">h</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">thickness</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">25.4f</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//pipe thickness converted to mm from inches</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">zf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">zf_value</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">25.4f</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">h</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//z-coordinate of focus point &lt;--input. ID: zf_value=0; OD: zf_value=h.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">zf</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">zf_value</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">25.4f</span><span class="sf11b2"> </span><span class="sf11b2">-</span><span class="sf11b2"> </span><span class="sf3b2">h</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//z-coordinate of focus point &lt;--input. ID: zf_value=0; OD: zf_value=h.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">tilt</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//probe tilt angle //Simply set tilt = 0</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">tilt</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//probe tilt angle //Simply set tilt = 0</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">tilt</span><span class="sf11b2">=</span><span class="sf3b2">tilt</span><span class="sf11b2">*</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf10b2">1.</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf10b2">90</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">tilt</span><span class="sf11b2">=</span><span class="sf3b2">tilt</span><span class="sf11b2">*</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf10b2">1.</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf10b2">90</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">float</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">m_distance_value</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">water_path</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">25.4</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">// &lt;--input</span></code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> &nbsp; &nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; font-weight: bold; ">float</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">m_distance_value</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">=</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">water_path</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">*</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">25.4f</span><span class="sf17b16">;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; ">// &lt;--input</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">bet8</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">incident_angle</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">PI</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2">.</span><span class="sf3b2">f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">v2</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">v1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">180.0</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">PI</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//m_ref_angle; // refraction angle [35,45] &lt;--input &nbsp;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">bet8</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">incident_angle</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">PI</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf10b2">180</span><span class="sf11b2">.</span><span class="sf3b2">f</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf3b2">v2</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">v1</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">*</span><span class="sf11b2"> </span><span class="sf10b2">180.0</span><span class="sf11b2"> </span><span class="sf11b2">/</span><span class="sf11b2"> </span><span class="sf3b2">PI</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//m_ref_angle; // refraction angle [35,45] &lt;--input &nbsp;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">bet8</span><span class="sf11b2">=</span><span class="sf3b2">bet8</span><span class="sf11b2">*</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf10b2">1.</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf10b2">90</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">bet8</span><span class="sf11b2">=</span><span class="sf3b2">bet8</span><span class="sf11b2">*</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf10b2">1.</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf10b2">90</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">// &nbsp; u0: x-coordinate of element #0</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">// &nbsp; u0: x-coordinate of element #0</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">m_probe_orientation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">m_probe_orientation</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">m_probe_orientation</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">switch</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">m_probe_orientation</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">m_distance_value</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//water path for element #0</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">m_distance_value</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//water path for element #0</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf3b2">j</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf3b2">j</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">u0</span><span class="sf11b2">=</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">8</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">v<wbr>21</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf10b2">8</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//default value: set angle bet8 for element #8 &nbsp; &nbsp; &nbsp; </span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">u0</span><span class="sf11b2">=</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">8</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">v<wbr>21</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf10b2">8</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//default value: set angle bet8 for element #8 &nbsp; &nbsp; &nbsp; </span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">15</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">m_distance_value</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">15</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">m_distance_value</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">14</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">-</span><span class="sf11b2">-</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">14</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">-</span><span class="sf11b2">-</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">15</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf11b2">(</span><span class="sf10b2">15</span><span class="sf11b2">-</span><span class="sf3b2">j</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">15</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf11b2">(</span><span class="sf10b2">15</span><span class="sf11b2">-</span><span class="sf3b2">j</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">u0</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">8</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">/<wbr></span><span class="sf3b2">v21</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf10b2">8</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">u0</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">8</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">/<wbr></span><span class="sf3b2">v21</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf10b2">8</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">2</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">15</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">m_distance_value</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">15</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">m_distance_value</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">14</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">-</span><span class="sf11b2">-</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">14</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&gt;</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">-</span><span class="sf11b2">-</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">15</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf11b2">(</span><span class="sf10b2">15</span><span class="sf11b2">-</span><span class="sf3b2">j</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">15</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf11b2">(</span><span class="sf10b2">15</span><span class="sf11b2">-</span><span class="sf3b2">j</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">u0</span><span class="sf11b2">=</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">8</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">v<wbr>21</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">-</span><span class="sf10b2">7.5</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">u0</span><span class="sf11b2">=</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">8</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">v<wbr>21</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">-</span><span class="sf10b2">7.5</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">case</span><span class="sf11b2"> </span><span class="sf10b2">3</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">m_distance_value</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">m_distance_value</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf3b2">j</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf3b2">j</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">u0</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">8</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">/<wbr></span><span class="sf3b2">v21</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">-</span><span class="sf10b2">7.5</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">u0</span><span class="sf11b2">=</span><span class="sf11b2">-</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf10b2">8</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf8b2">tan</span><span class="sf11b2">(</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf8b2">sin</span><span class="sf11b2">(</span><span class="sf3b2">bet8</span><span class="sf11b2">)</span><span class="sf11b2">/<wbr></span><span class="sf3b2">v21</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">-</span><span class="sf10b2">7.5</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">break</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">}</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">}</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; m_focus_value=u0;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; m_focus_value=u0;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; result.Format("%s: h=%5.2f, z_min=%5.2f (tilt=%4.1f), u0=%5.2f (bet8=%4.1f), zf=%5.2f\n",</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; result.Format("%s: h=%5.2f, z_min=%5.2f (tilt=%4.1f), u0=%5.2f (bet8=%4.1f), zf=%5.2f\n",</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; wword,h,m_distance_value,m_probe_tilt,u0,m_ref_a<wbr>ngle,zf);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; wword,h,m_distance_value,m_probe_tilt,u0,m_ref_a<wbr>ngle,zf);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; m_result_control.AddString(result);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; m_result_control.AddString(result);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">tmax</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">tmax</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">m_probe_orientation</span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">m_probe_orientation</span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">m_probe_orientation</span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">m_probe_orientation</span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf10b2">1</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">u</span><span class="sf11b2">=</span><span class="sf3b2">u0</span><span class="sf11b2">-</span><span class="sf3b2">j</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">u</span><span class="sf11b2">=</span><span class="sf3b2">u0</span><span class="sf11b2">-</span><span class="sf3b2">j</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">u</span><span class="sf11b2">=</span><span class="sf3b2">u0</span><span class="sf11b2">+</span><span class="sf3b2">j</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">u</span><span class="sf11b2">=</span><span class="sf3b2">u0</span><span class="sf11b2">+</span><span class="sf3b2">j</span><span class="sf11b2">*</span><span class="sf3b2">p</span><span class="sf11b2">*</span><span class="sf8b2">cos</span><span class="sf11b2">(</span><span class="sf3b2">tilt</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">&lt;</span><span class="sf10b2">0.</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">u</span><span class="sf11b2">=</span><span class="sf8b2">fabs</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">&lt;</span><span class="sf10b2">0.</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">u</span><span class="sf11b2">=</span><span class="sf8b2">fabs</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf3b2">u</span><span class="sf11b2">=</span><span class="sf8b2">fabs</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">-</span><span class="sf10b2">0.</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf3b2">u</span><span class="sf11b2">=</span><span class="sf8b2">fabs</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">-</span><span class="sf10b2">0.</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">h</span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf10b2">0.</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">h</span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf10b2">0.</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">rr</span><span class="sf11b2">=</span><span class="sf3b2">u</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//when h=0 emergence point coincides with focal point</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">rr</span><span class="sf11b2">=</span><span class="sf3b2">u</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf9b2">//when h=0 emergence point coincides with focal point</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//simulate a curved transducer focusing at (x_F,0)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//simulate a curved transducer focusing at (x_F,0)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">else</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">else</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">r0</span><span class="sf11b2">=</span><span class="sf10b2">0.</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">r0</span><span class="sf11b2">=</span><span class="sf10b2">0.</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">r1</span><span class="sf11b2">=</span><span class="sf3b2">u</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">r1</span><span class="sf11b2">=</span><span class="sf3b2">u</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">loop</span><span class="sf11b2">:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">loop</span><span class="sf11b2">:</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">rr</span><span class="sf11b2">=</span><span class="sf11b2">(</span><span class="sf3b2">r0</span><span class="sf11b2">+</span><span class="sf3b2">r1</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">rr</span><span class="sf11b2">=</span><span class="sf11b2">(</span><span class="sf3b2">r0</span><span class="sf11b2">+</span><span class="sf3b2">r1</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf10b2">2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">lhs</span><span class="sf11b2">=</span><span class="sf11b2">(</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">v21</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">-</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">v21</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">r<wbr>r</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">+</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">lhs</span><span class="sf11b2">=</span><span class="sf11b2">(</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">v21</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">-</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">v21</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">r<wbr>r</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">+</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">v21</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">+</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">-</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*<wbr></span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">+</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">v21</span><span class="sf11b2">-</span><span class="sf10b2">1</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">+</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">-</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*<wbr></span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">+</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">-</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">rr</span><span class="sf11b2">-</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf3b2">u</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">lhs</span><span class="sf11b2">&lt;</span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">r0</span><span class="sf11b2">=</span><span class="sf3b2">rr</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">lhs</span><span class="sf11b2">&lt;</span><span class="sf10b2">0</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">r0</span><span class="sf11b2">=</span><span class="sf3b2">rr</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf3b2">r1</span><span class="sf11b2">=</span><span class="sf3b2">rr</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">else</span><span class="sf11b2"> </span><span class="sf3b2">r1</span><span class="sf11b2">=</span><span class="sf3b2">rr</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">r1</span><span class="sf11b2">-</span><span class="sf3b2">r0</span><span class="sf11b2">)</span><span class="sf11b2">&gt;</span><span class="sf10b2">1</span><span class="sf11b2">.</span><span class="sf3b2">e</span><span class="sf11b2">-</span><span class="sf10b2">5</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">loop</span><span class="sf11b2">;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">r1</span><span class="sf11b2">-</span><span class="sf3b2">r0</span><span class="sf11b2">)</span><span class="sf11b2">&gt;</span><span class="sf10b2">1</span><span class="sf11b2">.</span><span class="sf3b2">e</span><span class="sf11b2">-</span><span class="sf10b2">5</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf7b2">goto</span><span class="sf11b2"> </span><span class="sf3b2">loop</span><span class="sf11b2">;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">rr</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf3b2">rr</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">time</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf8b2">sqrt</span><span class="sf11b2">(</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">v1</span><span class="sf11b2">+</span><span class="sf8b2">sqrt</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">-</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j<wbr></span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">-</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">v2</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">time</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf8b2">sqrt</span><span class="sf11b2">(</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">v1</span><span class="sf11b2">+</span><span class="sf8b2">sqrt</span><span class="sf11b2">(</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">-</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j<wbr></span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf3b2">u</span><span class="sf11b2">-</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">+</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">*</span><span class="sf11b2">(</span><span class="sf10b2">2</span><span class="sf11b2">*</span><span class="sf3b2">h</span><span class="sf11b2">+</span><span class="sf3b2">zf</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">v2</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">alp</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf8b2">atan</span><span class="sf11b2">(</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">/</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">PI</span><span class="sf11b2">*</span><span class="sf10b2">180</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">alp</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf8b2">atan</span><span class="sf11b2">(</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">/</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">/</span><span class="sf3b2">PI</span><span class="sf11b2">*</span><span class="sf10b2">180</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">bet</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">/</span><span class="sf8b2">sqrt</span><span class="sf11b2">(</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">/<wbr></span><span class="sf3b2">PI</span><span class="sf11b2">*</span><span class="sf10b2">180</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">bet</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">=</span><span class="sf8b2">asin</span><span class="sf11b2">(</span><span class="sf3b2">v21</span><span class="sf11b2">*</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">/</span><span class="sf8b2">sqrt</span><span class="sf11b2">(</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">r</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">+</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">*</span><span class="sf3b2">z</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">)</span><span class="sf11b2">)</span><span class="sf11b2">/<wbr></span><span class="sf3b2">PI</span><span class="sf11b2">*</span><span class="sf10b2">180</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">time</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">&gt;</span><span class="sf3b2">tmax</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">tmax</span><span class="sf11b2">=</span><span class="sf3b2">time</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf3b2">time</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">&gt;</span><span class="sf3b2">tmax</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf3b2">tmax</span><span class="sf11b2">=</span><span class="sf3b2">time</span><span class="sf11b2">[</span><span class="sf3b2">j</span><span class="sf11b2">]</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">for</span><span class="sf11b2">(</span><span class="sf3b2">j</span><span class="sf11b2">=</span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">&lt;</span><span class="sf10b2">16</span><span class="sf11b2">;</span><span class="sf3b2">j</span><span class="sf11b2">+</span><span class="sf11b2">+</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">td</span><span class="sf17b16">[</span><span class="sf17b16">j</span><span class="sf17b16">]</span><span class="sf17b16">=</span><span class="sf17b16">(</span><span class="sf17b16">tmax</span><span class="sf17b16">-</span><span class="sf17b16">time</span><span class="sf17b16">[</span><span class="sf17b16">j</span><span class="sf17b16">]</span><span class="sf17b16">)</span><span class="sf17b16">*</span><span class="sf17b16">1000</span><span class="sf17b16">;</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span style="color: #000000; background-color: #efcb05; ">&nbsp;</span><span style="color: #000000; background-color: #efcb05; "> </span><span class="sf17b16">td</span><span class="sf17b16">[</span><span class="sf17b16">j</span><span class="sf17b16">]</span><span class="sf17b16">=</span><span class="sf17b16"> </span><span class="sf17b16">(</span><span class="sf17b16">WORD</span><span class="sf17b16">)</span><span class="sf17b16">(</span><span class="sf17b16">(</span><span class="sf17b16">tmax</span><span class="sf17b16">-</span><span class="sf17b16">time</span><span class="sf17b16">[</span><span class="sf17b16">j</span><span class="sf17b16">]</span><span class="sf17b16">)</span><span class="sf17b16">*</span><span class="sf17b16">1000.0</span><span class="sf17b16">)</span><span class="sf17b16">;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//printf("td %d = %d\r\n", j, td[j]);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf9b2">//printf("td %d = %d\r\n", j, td[j]);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">*</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; for(j=0;j&lt;16;j++)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; for(j=0;j&lt;16;j++)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; {</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result.Format("j=%2d, r=%6.3f, alp=%5.2f, bet=%5.2f, time=%6.3f, time_delay=%d ns\n",</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result.Format("j=%2d, r=%6.3f, alp=%5.2f, bet=%5.2f, time=%6.3f, time_delay=%d ns\n",</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; j,r[j],alp[j],bet[j],time[j],(int)((tmax-time[j]<wbr>)*1000));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; j,r[j],alp[j],bet[j],time[j],(int)((tmax-time[j]<wbr>)*1000));</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">// &nbsp; &nbsp; &nbsp; &nbsp; result.Format("j=%2d, time_delay=%d ns\n",j,td[j]);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">// &nbsp; &nbsp; &nbsp; &nbsp; result.Format("j=%2d, time_delay=%d ns\n",j,td[j]);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_result_control.AddString(result);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_result_control.AddString(result);</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; }</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">*/</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf13b2">#endif</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ShutDownSystem</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">ShutDownSystem</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pName</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">128</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">"Celle"</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pName</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">128</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">"Celle"</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pPasswd</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">128</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">"pxi"</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pPasswd</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">128</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">"pxi"</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pDomain</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">128</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">"PXI"</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pDomain</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">128</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">"PXI"</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pRemoteName</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">260</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">"PhasedArray"</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pRemoteName</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">260</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf12b2">"PhasedArray"</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pMessage</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">512</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">{</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">}</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">char</span><span class="sf11b2"> </span><span class="sf3b2">pMessage</span><span class="sf11b2">[</span><span class="sf11b2"> </span><span class="sf10b2">512</span><span class="sf11b2"> </span><span class="sf11b2">]</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf11b2">{</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">}</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">HANDLE</span><span class="sf11b2"> </span><span class="sf3b2">hLogonToken</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">HANDLE</span><span class="sf11b2"> </span><span class="sf3b2">hLogonToken</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">HANDLE</span><span class="sf11b2"> </span><span class="sf3b2">hAdminToken</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">HANDLE</span><span class="sf11b2"> </span><span class="sf3b2">hAdminToken</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">HANDLE</span><span class="sf11b2"> </span><span class="sf3b2">hThreadToken</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf18b2">HANDLE</span><span class="sf11b2"> </span><span class="sf3b2">hThreadToken</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">TOKEN_PRIVILEGES</span><span class="sf11b2"> </span><span class="sf3b2">tkp</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">TOKEN_PRIVILEGES</span><span class="sf11b2"> </span><span class="sf3b2">tkp</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">LogonUser</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pName</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pDomain</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pPasswd</span><span class="sf11b2">,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">LogonUser</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pName</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pDomain</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">pPasswd</span><span class="sf11b2">,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">LOGON32_LOGON_INTERACTIVE</span><span class="sf11b2">,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">LOGON32_LOGON_INTERACTIVE</span><span class="sf11b2">,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">LOGON32_PROVIDER_DEFAULT</span><span class="sf11b2">,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">LOGON32_PROVIDER_DEFAULT</span><span class="sf11b2">,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">&amp;</span><span class="sf3b2">hLogonToken</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">&amp;</span><span class="sf3b2">hLogonToken</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">DuplicateTokenEx</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">hLogonToken</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">TOKEN_ALL_ACCESS</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SecurityIdentification</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">TokenPrimary</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">hAdminToken</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">DuplicateTokenEx</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">hLogonToken</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">TOKEN_ALL_ACCESS</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SecurityIdentification</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">TokenPrimary</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">hAdminToken</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">ImpersonateLoggedOnUser</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">hAdminToken</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">ImpersonateLoggedOnUser</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">hAdminToken</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">OpenThreadToken</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">GetCurrentThread</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">TOKEN_ADJUST_PRIVILEGES</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">TOKEN_QUERY</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">hThreadToken</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">OpenThreadToken</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">GetCurrentThread</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">TOKEN_ADJUST_PRIVILEGES</span><span class="sf11b2"> </span><span class="sf11b2">|</span><span class="sf11b2"> </span><span class="sf3b2">TOKEN_QUERY</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">hThreadToken</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Get the LUID for shutdown privilege.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Get the LUID for shutdown privilege.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">LookupPrivilegeValue</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SE_SHUTDOWN_NAME</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tkp</span><span class="sf11b2">.</span><span class="sf3b2">Privileges</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Luid</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">LookupPrivilegeValue</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">SE_SHUTDOWN_NAME</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tkp</span><span class="sf11b2">.</span><span class="sf3b2">Privileges</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Luid</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tkp</span><span class="sf11b2">.</span><span class="sf3b2">PrivilegeCount</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tkp</span><span class="sf11b2">.</span><span class="sf3b2">PrivilegeCount</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tkp</span><span class="sf11b2">.</span><span class="sf3b2">Privileges</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Attributes</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SE_PRIVILEGE_ENABLED</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tkp</span><span class="sf11b2">.</span><span class="sf3b2">Privileges</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Attributes</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">SE_PRIVILEGE_ENABLED</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Get shutdown privilege for this thread.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Get shutdown privilege for this thread.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">AdjustTokenPrivileges</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">hThreadToken</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tkp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">PTOKEN_PRIVILEGES</span><span class="sf11b2">)</span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">AdjustTokenPrivileges</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">hThreadToken</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tkp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">PTOKEN_PRIVILEGES</span><span class="sf11b2">)</span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span><span class="sf11b2"> </span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">GetLastError</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ERROR_SUCCESS</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">GetLastError</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ERROR_SUCCESS</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf10b2">1</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if( FALSE == InitiateSystemShutdown( pRemoteName, pMessage, pDlg-&gt;m_timeOut, FALSE, FALSE ) )</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">//if( FALSE == InitiateSystemShutdown( pRemoteName, pMessage, pDlg-&gt;m_timeOut, FALSE, FALSE ) )</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">InitiateSystemShutdown</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">InitiateSystemShutdown</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">TRUE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">else</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AbortSystemShutdown</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pRemoteName</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf8b2">AbortSystemShutdown</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">pRemoteName</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Disable shutdown privilege.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">// Disable shutdown privilege.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tkp</span><span class="sf11b2">.</span><span class="sf3b2">Privileges</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Attributes</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">tkp</span><span class="sf11b2">.</span><span class="sf3b2">Privileges</span><span class="sf11b2">[</span><span class="sf10b2">0</span><span class="sf11b2">]</span><span class="sf11b2">.</span><span class="sf3b2">Attributes</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">AdjustTokenPrivileges</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">hThreadToken</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tkp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">PTOKEN_PRIVILEGES</span><span class="sf11b2">)</span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">AdjustTokenPrivileges</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">hThreadToken</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf18b2">FALSE</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&amp;</span><span class="sf3b2">tkp</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">(</span><span class="sf3b2">PTOKEN_PRIVILEGES</span><span class="sf11b2">)</span><span class="sf3b2">NULL</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">GetLastError</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ERROR_SUCCESS</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">if</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf8b2">GetLastError</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">!</span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf3b2">ERROR_SUCCESS</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">RevertToSelf</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
</tbody>
</table>
</body>
</html>
